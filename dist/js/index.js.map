{"version":3,"file":"js/../js/index.js","mappings":"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","sources":["webpack://vdsor/./js/data-types/sharing|sync|nonrecursive|/.ts$","webpack://vdsor/./node_modules/astry/dist/js/scanner.js","webpack://vdsor/./js/css-grammar.ts","webpack://vdsor/./js/data-types/index.ts","webpack://vdsor/./js/data-types/sharing/background-color.ts","webpack://vdsor/./js/data-types/sharing/border-radius.ts","webpack://vdsor/./js/data-types/sharing/flex-basis.ts","webpack://vdsor/./js/data-types/sharing/flex-grow.ts","webpack://vdsor/./js/data-types/sharing/flex-shrink.ts","webpack://vdsor/./js/data-types/sharing/font-family.ts","webpack://vdsor/./js/data-types/sharing/font-size.ts","webpack://vdsor/./js/data-types/sharing/font-stretch.ts","webpack://vdsor/./js/data-types/sharing/font-style.ts","webpack://vdsor/./js/data-types/sharing/font-weight.ts","webpack://vdsor/./js/data-types/sharing/height.ts","webpack://vdsor/./js/data-types/sharing/line-height.ts","webpack://vdsor/./js/data-types/sharing/width.ts","webpack://vdsor/./js/index.ts","webpack://vdsor/./js/parser.ts","webpack://vdsor/./js/tokenizer.ts","webpack://vdsor/./js/utils.ts","webpack://vdsor/webpack/bootstrap","webpack://vdsor/webpack/runtime/hasOwnProperty shorthand","webpack://vdsor/webpack/startup"],"sourcesContent":["var map = {\n\t\"./background-color.ts\": 399,\n\t\"./border-radius.ts\": 682,\n\t\"./flex-basis.ts\": 744,\n\t\"./flex-grow.ts\": 346,\n\t\"./flex-shrink.ts\": 477,\n\t\"./font-family.ts\": 355,\n\t\"./font-size.ts\": 257,\n\t\"./font-stretch.ts\": 751,\n\t\"./font-style.ts\": 828,\n\t\"./font-weight.ts\": 982,\n\t\"./height.ts\": 320,\n\t\"./line-height.ts\": 208,\n\t\"./width.ts\": 394\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 570;","(()=>{\"use strict\";var __webpack_exports__={};(()=>{var exports=__webpack_exports__,SCOPE,OPERATIONS,MARKS;Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.unwrapTokens=exports.UseKey=exports.Token=exports.OPERATIONS=exports.Scanner=void 0,function(e){e[e.NODE=0]=\"NODE\",e[e.START=1]=\"START\",e[e.BEGIN=2]=\"BEGIN\",e[e.CURSOR=3]=\"CURSOR\",e[e.BACK_POINT=4]=\"BACK_POINT\",e[e.USE_FOLD=5]=\"USE_FOLD\"}(SCOPE||(SCOPE={}));class Hook{constructor(){this.mode=1}}class Node extends Hook{constructor(type,map,useContent){super(),this.type=type,this.map=map,this.useContent=useContent,this.Wrapper=Node.NODE_MAP[type]||(Node.NODE_MAP[type]=eval(`(function ${type}(){this.type=\"${type}\";})`))}use(e,t,n){let{tokens:o,hookPoint:s}=e;const i=new this.Wrapper;i.loc={start:t,end:n};let r=function(e){i[e.key]=e.value};if(this.useContent){const e=i.content=[];r=function(t){e.push(t)}}o=o.splice(s),this.map&&(o=this.map(o,e,t,n)||o),function e(t){t instanceof Array?t.forEach(e):t instanceof UseKey&&r(t)}(o),e.tokens.push(i)}}Node.NODE_MAP={};class UseKey{constructor(e,t){this.key=e,this.value=t}}exports.UseKey=UseKey;class Key extends Hook{constructor(e,t){super(),this.key=e,this.map=t}use(e,t,n){let{tokens:o,hookPoint:s}=e,i=o[s];this.map&&(i=this.map(i,e,t,n)||i),o.splice(s,1,new UseKey(this.key,i))}}Key.Wrapper=UseKey;class Merge extends Hook{constructor(e){super(),this.map=e}use(e,t,n){let{tokens:o,hookPoint:s}=e;o.push(this.map(o.splice(s),e,t,n))}}class Prev extends Hook{constructor(e,t){super(),this.match=e,this.onlyToken=t}use(e){let{tokens:t,hookPoint:n}=e;n-=1;let o=t[n];if(!this.onlyToken||o instanceof Token){if(this.match){let s=this.match(o,e);if(s&&\"number\"==typeof s&&s!==o.value.length)return void t.splice(n,1,o.slice(0,-s),o.slice(-s))}e.hookPoint-=1}}}class Pipe extends Hook{constructor(e){super(),this.pipe=e,this.mode=4}use(e,t,n){let{tokens:o,hookPoint:s}=e,i=this.pipe(o[s],e,t,n);void 0!==i?o[s]=i:o.splice(s,1)}}class Pick extends Pipe{constructor(){super(...arguments),this.mode=1}}class Call extends Hook{constructor(e,t){super(),this.use=e,this.mode=t}}class NoCapture extends Hook{constructor(){super(),this.mode=2}use(e,t,n){let{tokens:o,hookPoint:s}=e;o.splice(s,1),t.offset<e.offset&&(e.offset=t.offset,e.line=t.line,e.column=t.column)}}!function(e){e.FINISH=new String(\"FINISH\"),e.WRAP=new String(\"WRAP\"),e.UNWRAP=new String(\"UNWRAP\"),e.UNWRAP_ALL=new String(\"UNWRAP_ALL\"),e.OPTION=new String(\"OPTION\"),e.SPLIT=new String(\"SPLIT\"),e.NO_COLLECT=new String(\"NO_COLLECT\"),e.NO_CAPTURE=new String(\"NO_CAPTURE\"),e.MARK_AS_ROOT=new String(\"MARK_AS_ROOT\"),e.FORK_IN_PARENT=new String(\"FORK_IN_PARENT\"),e.FORK_IN_ROOT=new String(\"FORK_IN_ROOT\"),e.END=new String(\"END\"),e.END_ON_LEFT=new String(\"END_ON_LEFT\"),e.useKey=function(e,t){return new UseKey(e.toString(),t)},e.node=function(e,t,n=!1,o=1){const s=new Node(e,t,n);return s.mode=o,s},e.key=function(e,t){return new Key(e,t)},e.pick=function(e){return new Pick(e||function(){})},e.hook=function(e,t=1){return new Call(e,t)},e.pipe=function(e){return new Pipe(e||function(){})},e.prev=function(e,t){return new Prev(e,t)},e.merge=function(e=function(e){return e}){return new Merge(e)},e.MATCH_BEGIN=\"\",e.MATCH_END=\"\",e.MATCH_EOF=[[\"\",\"\"]],e.MERGE_ALL_TOKENS=e.merge((function(e){return e.reduce(((e,t)=>e.concat(t)))})),e.UNFOLD=e.hook((function(e){const{tokens:t,hookPoint:n}=e;for(const e of t.splice(n))e instanceof Array?t.push(...e):t.push(e)}),1)}(OPERATIONS||(OPERATIONS={})),exports.OPERATIONS=OPERATIONS,function(e){e.FINISH=OPERATIONS.FINISH,e.END=OPERATIONS.END,e.END_ON_LEFT=OPERATIONS.END_ON_LEFT,e.UNWRAP=OPERATIONS.UNWRAP,e.WRAP=OPERATIONS.WRAP,e.ROOT=new String(\"ROOT\"),e.RESOLVE=\"_RESOLVE_\",e.TYPE=\"_TYPE_\",e.ROLL=\"_ROLL_\",e.PARENT=\"_PARENT_\",e.COLLECT=\"_COLLECT_\",e.BUBBING_HOOKS=\"_BUBBING_HOOKS_\",e.CAPTURING_HOOKS=\"_CAPTURING_HOOKS_\",e.SLICE_HOOKS=\"_SLICE_HOOKS_\",e.IGNORE_TESTS=\"_IGNORE_TESTS_\",e.RESOLVE_TYPE_SET=new Set([OPERATIONS.FINISH,OPERATIONS.END,OPERATIONS.END_ON_LEFT,OPERATIONS.UNWRAP,OPERATIONS.UNWRAP_ALL,OPERATIONS.WRAP,e.ROOT])}(MARKS||(MARKS={}));class Scanner{constructor(e,t){this.useEscape=!1,this.useFold=!0,this.ignoreCase=!1,this.scanTree=build(e),t&&Object.assign(this,t)}scan(e){let t,n,o=\"string\"==typeof e?{tokens:[],input:e,begin:0,offset:0,end:e.length,line:1,column:1,useFold:this.useFold,useEscape:this.useEscape,ignoreCase:this.ignoreCase,hookPoint:0}:e,s=[],i=[[this.scanTree,O(),O(),O(),0,!1]],r=0,c=!0;for(;;){let e;if(r||(n=O()),c)e=\"\",c=!1;else{if(o.offset>=o.end){if(i[0][SCOPE.CURSOR].offset<n.offset){if(u(\"\")||l())return o;if(o.offset<o.end)break;s.length=0,u(\"\")}if(s.length){const e=t;if(u(\"\",!0),e!==t&&l())return o}i[0][SCOPE.CURSOR].offset<n.offset&&R(i[0][SCOPE.CURSOR],n,null);break}switch(e=o.input[o.offset],o.offset+=1,e){case\"\\r\":if(\"\\n\"!==o.input[o.offset])break;e=\"\\n\",o.offset+=1;case\"\\n\":o.line+=1,o.column=0}if(o.column+=1,o.ignoreCase&&(e=e.toLowerCase()),o.useEscape)if(\"\\\\\"===e){if(r^=1,r)continue}else r&&(r=0,e=\"\\\\\"+e)}if(u(e))return o}return o;function O(){return{offset:o.offset,line:o.line,column:o.column}}function u(e,o){const r=s,c=i[0][SCOPE.NODE];let u,S,f;s=[];let R=!1;for(;;){if(r.length)[u,S]=r.shift();else{if(t||R)break;u=c,S=null}R=R||u===c,f=!1,t=E(u,S)||u[MARKS.ROLL]&&E(u[MARKS.ROLL],S)||t}if(!o&&0===s.length&&l())return!0;function E(t,o){let r=t[e];if(r&&(o?f&&(o=o.slice()):o=[[n,t[MARKS.CAPTURING_HOOKS]]],f=!0,s.push([r,o]),r[MARKS.CAPTURING_HOOKS]&&o.push([O(),r[MARKS.CAPTURING_HOOKS]]),r[MARKS.RESOLVE]))return r=r[MARKS.RESOLVE],[r,O(),o,i.length]}}function l(){if(!t)return;const[e,{offset:n,line:s,column:r},O,u]=t;i.splice(0,i.length-u),o.offset=n,o.line=s,o.column=r;let l=S(e,O,!0);if(l>0)return!0;if(l<0)do{const e=i.shift();let t=o.tokens;e[SCOPE.USE_FOLD]?(o.tokens=t.shift()).pop():t.length=e[SCOPE.BACK_POINT]}while(++l<0);t=null,c=!0}function S(e,t,n){let s=e[MARKS.TYPE];const r=i[0],c=t[0][0];let u=o.tokens.length;if(n){let n,o=e[MARKS.SLICE_HOOKS];o&&(n=t[0][1],n&&(n=n.filter((e=>o.has(e))))),R(r[SCOPE.CURSOR],c,n)}if(s===MARKS.WRAP)return function(e,t,n){const{useFold:s,tokens:r}=o,c=r.length,u=t[0][0],l=O(),R=O();i.unshift([e,u,l,R,c,s]),s&&(o.tokens=[r],o.hookPoint=1);let _=n?E(t,e[MARKS.SLICE_HOOKS]):0;return _>=0&&(_=f(e[MARKS.BUBBING_HOOKS],u,R,l),_>=0)&&(e=e[MARKS.RESOLVE])?S(e,t,!1):_}(e,t,n);const l=o.tokens.length;if(n&&s!==MARKS.END_ON_LEFT){let n=E(t,e[MARKS.SLICE_HOOKS]);if(n<0)return o.tokens.length=u,n+1}if(o.hookPoint=l,s===MARKS.UNWRAP)return function(e,t){const n=i.shift();if(n[SCOPE.USE_FOLD]){let e=o.tokens.shift();o.hookPoint=e.length,e.push(o.tokens),o.tokens=e}let s=f(e[MARKS.BUBBING_HOOKS],n[SCOPE.START],O(),n[SCOPE.BEGIN]);if(s>=0){if(e=e[MARKS.RESOLVE],i[0][SCOPE.CURSOR]=O(),!e)return s;if(s=S(e,t,!1),s>=0)return s}if(i.unshift(n),n[SCOPE.USE_FOLD]){let e=o.tokens.pop();e.unshift(o.tokens),o.tokens=e}return s+1}(e,t);{const t=O(),n=f(e[MARKS.BUBBING_HOOKS],c,t);return n<0?(o.tokens.length=u,n+1):s===MARKS.END_ON_LEFT?(o.offset=c.offset,o.line=c.line,o.column=c.column,r[SCOPE.CURSOR]=c,1):(r[SCOPE.CURSOR]=t,s!==MARKS.END?n:1)}}function f(e,t,n,s){for(const i of e){let e=i.use(o,t,n,s);if(e<0)return e}return 0}function R(e,t,n){let s=0;if(e.offset<t.offset){let{tokens:i}=o;o.hookPoint=i.length,i.push(new Token(o.input.slice(e.offset,t.offset),e,t)),n&&(s=f(n,e,t))}return s}function E(e,t){let n=e[0][0];if(t)for(let o=1;o<e.length;o+=1){let[s,i]=e[o];if(i=i.filter((e=>t.has(e))),i.length){const e=R(n,s,i);if(e<0)return e;n=s}}return R(n,O(),null)}}}exports.Scanner=Scanner;class Token{constructor(e,t,n){this.value=e,this.loc={start:t,end:n}}trim(){const e=this.value.match(/^\\s*|\\s*$/gm);return this.slice(e[0].length,this.value.length-e[1].length)}concat(e){return new Token(this.value+e.value,this.loc.start,e.loc.end)}slice(e,t=this.value.length){let{value:n,loc:{start:o,end:s}}=this,{offset:i,line:r,column:c}=o,O=0;t<0&&(t=n.length+t),e<0&&(e=n.length+e),e>t&&(t=e);const u=[e,t].map((function(e){if(0===e)return o;if(e===n.length)return s;for(;O<e;)\"\\n\"===n[O]?(r+=1,c=1):c+=1,O+=1;return{offset:i+e,line:r,column:c}}));return new Token(n.slice(e,t),u[0],u[1])}toString(){return this.value}}exports.Token=Token;class RootStack extends Array{}function build(e){const t={[MARKS.TYPE]:MARKS.ROOT},[n,o,s]=buildRule([e],[t],[[new RootStack]],[[]],[t]);for(let e=0;e<n.length;e+=1){const t=n[e];MARKS.RESOLVE_TYPE_SET.has(t[MARKS.TYPE])||buildKey(MARKS.FINISH,[t],[o[e]],[s[e]])}return t}function buildRule(e,t,n,o,s){const i=[];let r,c=0;for(;c<e.length;){let l=0,S=c;const f=[];for(;;){if(e[c]===OPERATIONS.FORK_IN_ROOT)l&&(f.push(l),l=0),f.push(OPERATIONS.FORK_IN_ROOT);else{if(e[c]!==OPERATIONS.FORK_IN_PARENT)break;l+=1}c+=1}if(c===S){switch(r=e[c]){case OPERATIONS.NO_CAPTURE:case OPERATIONS.NO_COLLECT:i.push(r);case OPERATIONS.SPLIT:u(null);break;case OPERATIONS.OPTION:return O([i.concat(e.slice(c+1)),i.concat(e.slice(c+2))],(function(e){return buildRule(e,t,n.map((e=>e.slice())),o.map((e=>e.slice())),s)}));case OPERATIONS.MARK_AS_ROOT:return e=i.concat(e.slice(c+1)),O(t,(function(t,i){const r=n[i];return buildRule(e,[t],[[new RootStack(...r[0])].concat(r.slice(1))],[o[i]],[t].concat(s))}));default:if(r instanceof Hook)u(r);else for([t,n,o]=r instanceof Array?O(r,(function(e){return(e instanceof Array?buildRule:buildKey)(e,t,n.map((e=>e.slice())),o.map((e=>e.slice())),s)})):buildKey(r,t,n,o);i.length;)u(i.shift()===OPERATIONS.NO_COLLECT?OPERATIONS.pipe():new NoCapture)}c+=1}else{l&&f.push(l);for(let e of t){let t=e,n=0;for(let e of f)if(e===OPERATIONS.FORK_IN_ROOT)t=s[n++];else do{t=t[MARKS.PARENT],t===s[n]&&(n+=1)}while(--e>0);e[MARKS.ROLL]!==t&&(e[MARKS.ROLL],e[MARKS.ROLL]=t)}}}return[t,n,o];function O(e,t){let n=[],o=[],s=[];for(let i=0;i<e.length;i+=1){const r=t(e[i],i);n=n.concat(r[0]),o=o.concat(r[1]),s=s.concat(r[2])}return[n,o,s]}function u(e){if(e)switch(e.mode){case 1:n.forEach((e=>e.push(r)));break;case 4:case 2:for(let e=0;e<t.length;e+=1)s(e)}else{e=new Call((function(){}),2);for(let e=0;e<t.length;e+=1)MARKS.RESOLVE_TYPE_SET.has(t[e][MARKS.TYPE])||s(e)}function s(n){const s=t[n],i=s[MARKS.TYPE],r=Object.create(e);4!==e.mode&&MARKS.RESOLVE_TYPE_SET.has(i)?s[MARKS.BUBBING_HOOKS].push(r):((s[MARKS.CAPTURING_HOOKS]||(s[MARKS.CAPTURING_HOOKS]=[])).push(r),o[n].push(r))}}}function buildKey(e,t,n,o,s){if(\"string\"==typeof e){/^[\\s\\S]?$/.test(e)&&(e=[e]);for(let n=0;n<e.length;n+=1)t=t.map((function(t){return t[e[n]]||(t[e[n]]={[MARKS.PARENT]:t})}))}else MARKS.RESOLVE_TYPE_SET.has(e)&&(t=t.map((function(t,s){let r=n[s],c=o[s];if(o[s]=[],e===OPERATIONS.UNWRAP_ALL){if(e=OPERATIONS.UNWRAP,!(r[0]instanceof RootStack)){r.length>1&&(r[0]=r[0].concat(r.slice(1)));do{n[s]=[r[0][0]],r=r[0],t=i(t,e,r,c)}while(!(r[0]instanceof RootStack))}}else e===OPERATIONS.UNWRAP?(n[s]=[r[0][0]],r=r[0].concat(r.slice(1))):e===OPERATIONS.WRAP?(n[s]=[r],r=[]):n[s]=[r[0]],t=i(t,e,r,c);return t})));return[t,n,o];function i(e,t,n,o){return e[MARKS.RESOLVE],e[MARKS.RESOLVE]={[MARKS.PARENT]:e,[MARKS.TYPE]:t,[MARKS.SLICE_HOOKS]:o.length?new Set(o.splice(0)):null,[MARKS.BUBBING_HOOKS]:n.slice(1).reverse()}}}function unwrapTokens(e){return e instanceof Token?e.value:e instanceof Array?e.map(unwrapTokens):e}exports.unwrapTokens=unwrapTokens})();var __webpack_export_target__=exports;for(var i in __webpack_exports__)__webpack_export_target__[i]=__webpack_exports__[i];__webpack_exports__.__esModule&&Object.defineProperty(__webpack_export_target__,\"__esModule\",{value:!0})})();\n//# sourceMappingURL=scanner.js.map","import {\r\n    Scanner, OPERATIONS, HOOK_MODE, IScanEnv,\r\n    IPattern, Token,\r\n    IPosition, ISourceLocation,\r\n} from 'astry'\r\n\r\n\r\nconst {\r\n    FINISH,\r\n    WRAP, UNWRAP, UNWRAP_ALL,\r\n    OPTION,\r\n    SPLIT,\r\n    NO_COLLECT, NO_CAPTURE,\r\n    MARK_AS_ROOT, FORK_IN_PARENT, FORK_IN_ROOT,\r\n    END, END_ON_LEFT,\r\n    useKey,\r\n    node, key, pick, hook, pipe, prev, merge,\r\n\r\n    MATCH_BEGIN,\r\n    MATCH_END,\r\n    MATCH_EOF,\r\n    MERGE_ALL_TOKENS,\r\n    UNFOLD\r\n} = OPERATIONS;\r\n\r\n\r\n\r\nconst MATCH_WHITE_SPACE_CHARACHER: IPattern = [` `, `\\n`, `\\t`];\r\nconst CLEAR_COMMENT: IPattern = [\r\n    [\r\n        NO_COLLECT,\r\n        [\r\n            [\"//\", WRAP, [\"\\n\", [MATCH_EOF]], UNWRAP],\r\n            [\"/*\", WRAP, [\"*/\", [MATCH_EOF]], UNWRAP],\r\n        ],\r\n    ]\r\n]\r\n\r\nconst CLEAR_WHITE_SPACE_CHARACHER: IPattern = [\r\n    [NO_COLLECT, MATCH_WHITE_SPACE_CHARACHER]\r\n];\r\n\r\nconst THROW_TOKEN_ERROR = hook(function (env, start, end) {\r\n    console.log(\"Invalid or unexpected token\", start, end);\r\n}, HOOK_MODE.RESOLVE);\r\n\r\nconst MATCH_STRING: IPattern = [\r\n    [\r\n        `\"`, WRAP,\r\n        [\r\n            [THROW_TOKEN_ERROR, `\\n`],\r\n            [`\\\\`, [`\\\\`, `\\n`, `\"`]],\r\n            [`\"`, UNWRAP]\r\n        ]\r\n\r\n    ],\r\n    [\r\n        `'`, WRAP,\r\n        [\r\n            [THROW_TOKEN_ERROR, `\\n`],\r\n            [`\\\\`, [`\\\\`, `\\n`, `'`]],\r\n            [`'`, UNWRAP]\r\n        ]\r\n    ],\r\n]\r\n\r\n// 不包含 '' \"\" 的 url 地址可能会包含断义字符 / 影响判别，这里通过单独匹配给出结果\r\nconst MATCH_URL: IPattern = [\r\n    [\r\n        MATCH_BEGIN, \"url(\", WRAP,\r\n        [\r\n            [MATCH_STRING],\r\n            [CLEAR_WHITE_SPACE_CHARACHER],\r\n            [\")\", UNWRAP]\r\n        ],\r\n    ]\r\n];\r\n\r\nconst MATCH_CSS_ATTRIBUTE_VALUE: IPattern = [\r\n    [\r\n        MARK_AS_ROOT,\r\n        [\r\n            [MATCH_STRING],\r\n            [MATCH_URL],\r\n            [\r\n                // 使能在 ( 后被断句\r\n                // 这里没做额外检验允许括号前的空格\r\n                MERGE_ALL_TOKENS,  \r\n                prev(null, true), \"(\"\r\n            ],\r\n            \")\",\r\n            [CLEAR_WHITE_SPACE_CHARACHER],\r\n            [CLEAR_COMMENT],\r\n            [\r\n                MERGE_ALL_TOKENS,\r\n                prev(null, true),\r\n                \"%\"\r\n            ],\r\n            \"/\",\r\n            \",\"\r\n        ]\r\n    ]\r\n]\r\n\r\nexport {\r\n    MATCH_CSS_ATTRIBUTE_VALUE,\r\n}\r\n","/**\r\n * 构建基础数据类型匹配器\r\n * 缓存部分使用频繁的匹配器，使之不必要每次引用都需编译\r\n */\r\n\r\nimport {\r\n    getRange,\r\n    walker,\r\n    MatchEnv,\r\n    IPattern,\r\n    IFound,\r\n    IMatchFunc,\r\n    IWalker,\r\n    matchUnits,\r\n    matchManyTimes,\r\n} from '../utils'\r\nimport {\r\n    IAnalyzer,\r\n    buildAnalyzer, buildPattern\r\n} from '../parser'\r\n\r\n// @ts-ignore\r\nimport * as VDS_SYNTAXES from './syntaxes.json'\r\n\r\n\r\nexport {\r\n    getCachePattern,\r\n    setSharingSyntax,\r\n    getSharingAnalyzer\r\n}\r\n\r\n\r\n\r\nconst syntaxesContext = (<any>require).context('./sharing', false, /\\.ts$/);\r\nconst SHARING_SYNTAXES: Array<[string, string]> = [];\r\n\r\nconst SHARING_DATA_TYPES_ANALYZER_MAP: Record<string, IAnalyzer> = {};\r\n\r\n\r\nfor (const path of syntaxesContext.keys()) {\r\n    SHARING_SYNTAXES.push([\r\n        path.slice(2, -3),\r\n        syntaxesContext(path).default\r\n    ]);\r\n}\r\n\r\n\r\nconst COLOR_VALUE_MAP: Record<string, number> = {\r\n    aliceblue: 0xF0F8FF, antiquewhite: 0xFAEBD7, aqua: 0x00FFFF, aquamarine: 0x7FFFD4, azure: 0xF0FFFF, beige: 0xF5F5DC, bisque: 0xFFE4C4, black: 0x000000, blanchedalmond: 0xFFEBCD, blue: 0x0000FF, blueviolet: 0x8A2BE2, brown: 0xA52A2A, burlywood: 0xDEB887, cadetblue: 0x5F9EA0, chartreuse: 0x7FFF00, chocolate: 0xD2691E, coral: 0xFF7F50, cornflowerblue: 0x6495ED, cornsilk: 0xFFF8DC, crimson: 0xDC143C, cyan: 0x00FFFF, darkblue: 0x00008B, darkcyan: 0x008B8B, darkgoldenrod: 0xB8860B, darkgray: 0xA9A9A9, darkgreen: 0x006400, darkgrey: 0xA9A9A9, darkkhaki: 0xBDB76B, darkmagenta: 0x8B008B, darkolivegreen: 0x556B2F, darkorange: 0xFF8C00, darkorchid: 0x9932CC, darkred: 0x8B0000, darksalmon: 0xE9967A, darkseagreen: 0x8FBC8F, darkslateblue: 0x483D8B, darkslategray: 0x2F4F4F, darkslategrey: 0x2F4F4F, darkturquoise: 0x00CED1, darkviolet: 0x9400D3, deeppink: 0xFF1493, deepskyblue: 0x00BFFF, dimgray: 0x696969, dimgrey: 0x696969, dodgerblue: 0x1E90FF, firebrick: 0xB22222, floralwhite: 0xFFFAF0, forestgreen: 0x228B22, fuchsia: 0xFF00FF, gainsboro: 0xDCDCDC, ghostwhite: 0xF8F8FF, gold: 0xFFD700, goldenrod: 0xDAA520, gray: 0x808080, green: 0x008000, greenyellow: 0xADFF2F, grey: 0x808080, honeydew: 0xF0FFF0, hotpink: 0xFF69B4, indianred: 0xCD5C5C, indigo: 0x4B0082, ivory: 0xFFFFF0, khaki: 0xF0E68C, lavender: 0xE6E6FA, lavenderblush: 0xFFF0F5, lawngreen: 0x7CFC00, lemonchiffon: 0xFFFACD, lightblue: 0xADD8E6, lightcoral: 0xF08080, lightcyan: 0xE0FFFF, lightgoldenrodyellow: 0xFAFAD2, lightgray: 0xD3D3D3, lightgreen: 0x90EE90, lightgrey: 0xD3D3D3, lightpink: 0xFFB6C1, lightsalmon: 0xFFA07A, lightseagreen: 0x20B2AA, lightskyblue: 0x87CEFA, lightslategray: 0x778899, lightslategrey: 0x778899, lightsteelblue: 0xB0C4DE, lightyellow: 0xFFFFE0, lime: 0x00FF00, limegreen: 0x32CD32, linen: 0xFAF0E6, magenta: 0xFF00FF, maroon: 0x800000, mediumaquamarine: 0x66CDAA, mediumblue: 0x0000CD, mediumorchid: 0xBA55D3, mediumpurple: 0x9370DB, mediumseagreen: 0x3CB371, mediumslateblue: 0x7B68EE, mediumspringgreen: 0x00FA9A, mediumturquoise: 0x48D1CC, mediumvioletred: 0xC71585, midnightblue: 0x191970, mintcream: 0xF5FFFA, mistyrose: 0xFFE4E1, moccasin: 0xFFE4B5, navajowhite: 0xFFDEAD, navy: 0x000080, oldlace: 0xFDF5E6, olive: 0x808000, olivedrab: 0x6B8E23, orange: 0xFFA500, orangered: 0xFF4500, orchid: 0xDA70D6, palegoldenrod: 0xEEE8AA, palegreen: 0x98FB98, paleturquoise: 0xAFEEEE, palevioletred: 0xDB7093, papayawhip: 0xFFEFD5, peachpuff: 0xFFDAB9, peru: 0xCD853F, pink: 0xFFC0CB, plum: 0xDDA0DD, powderblue: 0xB0E0E6, purple: 0x800080, red: 0xFF0000, rosybrown: 0xBC8F8F, royalblue: 0x4169E1, saddlebrown: 0x8B4513, salmon: 0xFA8072, sandybrown: 0xF4A460, seagreen: 0x2E8B57, seashell: 0xFFF5EE, sienna: 0xA0522D, silver: 0xC0C0C0, skyblue: 0x87CEEB, slateblue: 0x6A5ACD, slategray: 0x708090, slategrey: 0x708090, snow: 0xFFFAFA, springgreen: 0x00FF7F, steelblue: 0x4682B4, tan: 0xD2B48C, teal: 0x008080, thistle: 0xD8BFD8, tomato: 0xFF6347, turquoise: 0x40E0D0, violet: 0xEE82EE, wheat: 0xF5DEB3, white: 0xFFFFFF, whitesmoke: 0xF5F5F5, yellow: 0xFFFF00, yellowgreen: 0x9ACD32\r\n};\r\nconst LENGTH_UNITS = [\r\n    \"em\", \"ex\", \"ch\", \"rem\", \"vw\", \"vh\", \"vmin\", \"vmax\",  // Relative Lengths\r\n    \"cm\", \"mm\", \"Q\", \"in\", \"pt\", \"pc\", \"px\", // Absolute Lengths\r\n    \"cap\", \"ic\", \"lh\", \"rlh\", \"vi\", \"vb\"\r\n];\r\nconst PERCENTAGE_UNITS = [\"%\"];\r\nconst ANGLE_UNITS = [\"deg\", \"grad\", \"rad\", \"turn\"];\r\nconst TIME_UNITS = [\"s\", \"ms\"];\r\nconst FLEX_UNITS = [\"fr\"];\r\nconst FREQUENCY_UNITS = [\"Hz\", \"KhZ\"];\r\nconst RESOLUTION_UNITS = [\"dpi\", \"dpcm\", \"dppx\", \"x\"];\r\n\r\nconst DIMENSION_UNITS = LENGTH_UNITS.concat(\r\n    PERCENTAGE_UNITS,\r\n    ANGLE_UNITS,\r\n    TIME_UNITS,\r\n    FLEX_UNITS,\r\n    FREQUENCY_UNITS.map(unit => unit.toLowerCase()),\r\n    RESOLUTION_UNITS\r\n);\r\n\r\n\r\nconst DATA_TYPES_PATTERN_MAP: Record<string, IPattern> = {\r\n    \"an-plus-b\": wrapPattern(),\r\n    \"angle\": valuesPattern(ANGLE_UNITS),\r\n\r\n    \"custom-ident\": pickStringPattern(function (name) {\r\n        /**\r\n         * https://drafts.csswg.org/css-values/#identifier-value\r\n         * 标准中有些关于 custom-ident 的自动并且扩散的 non-greedy 特性仅为肉眼理解便利，\r\n         * 实现中并不科学和造成冗余，\r\n         * 并且如果需要 non-greedy 特性可以通过简单的语法声明灵活支持，\r\n         * 这里决定不支持这些\r\n         * \r\n         * 例如将：\r\n         `[ <family-name> | <generic-family> ]#\r\nwhere \r\n<family-name> = <string> | <custom-ident>+\r\n<generic-family> = serif | sans-serif | cursive | fantasy | monospace`\r\n\r\n        * 第一行改成 ：[ <generic-family> | <family-name> ]#\r\n        *\r\n        */\r\n\r\n        if (/^(_|\\\\|[a-zA-Z])(\\w|-|\\\\)*/.test(name)) {   // 非标准\r\n            return name;\r\n        }\r\n    }),\r\n    //  https://developer.mozilla.org/docs/Web/CSS/dimension\r\n    \"dimension\": valuesPattern(DIMENSION_UNITS, false, true),\r\n    \"flex\": valuesPattern(FLEX_UNITS),\r\n    \"frequency\": valuesPattern(FREQUENCY_UNITS),\r\n    \"ident\": wrapPattern(),\r\n    \"integer\": pickStringPattern(function (value, range: [number, number]) {\r\n        const num = Number(value);\r\n        if (num % 1 === 0 && checkRange(num, range)) {\r\n            return num;\r\n        }\r\n    }),\r\n    \"length\": valuesPattern(LENGTH_UNITS, true),\r\n    \"number\": pickStringPattern(function (value, range: [number, number]) {\r\n        const num = Number(value);\r\n        if (num === num && checkRange(num, range)) {\r\n            return num;\r\n        }\r\n    }),\r\n    \"percentage\": valuesPattern(PERCENTAGE_UNITS, true),\r\n    \"ratio\": lazyInitPattern(\"ratio\", `<number [0,+∞]> / <number [0,+∞]>`),\r\n    \"resolution\": valuesPattern(RESOLUTION_UNITS),\r\n    \"string\": pickArrayPattern(function (tokens: Array<string>) {\r\n        const hack = tokens[0];\r\n        if (hack === `\"` || hack === `'`) {\r\n            return tokens[1] || \"\";\r\n        }\r\n    }),\r\n    \"time\": valuesPattern(TIME_UNITS),\r\n    //https://developer.mozilla.org/docs/Web/CSS/timing-function\r\n    \"timing-function\": lazyInitPattern(\r\n        \"timing-function\",\r\n        `ease | ease-in | ease-out | ease-in-out | <easing-function>`\r\n    ),\r\n    \"url\": pickArrayPattern(function (tokens: Array<string>) {\r\n        const hack = tokens[0];\r\n        if (hack === \"url(\") {\r\n            return tokens.slice(1, -1);\r\n        }\r\n    }),\r\n\r\n    \"zero\": pickStringPattern(function (token) {\r\n        if (token === \"0\") {\r\n            return token;\r\n        }\r\n    }),\r\n    \"hex-color\": pickStringPattern(function (token) {\r\n        // https://drafts.csswg.org/css-color-4/#typedef-hex-color\r\n        if (token[0] === \"#\") {\r\n            let value = token.slice(1);\r\n\r\n            switch (value.length) {\r\n                case 3:\r\n                    value += \"f\";\r\n                case 4:\r\n                    value = value.replace(/(\\S)/g, \"$1$1\");\r\n                    break;\r\n                case 6:\r\n                    value += \"ff\"\r\n                case 8:\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            const color = parseInt(value.slice(0, -2), 16);\r\n            const opacity = parseInt(value.slice(-2), 16);\r\n            if (color === color && opacity === opacity) {\r\n                return [color, opacity];\r\n            }\r\n        }\r\n    }),\r\n    \"named-color\": pickStringPattern(function (name) {\r\n        return COLOR_VALUE_MAP[name.toLowerCase()];\r\n    }),\r\n    \"system-color\": lazyInitPattern(\r\n        \"system-color\",\r\n        VDS_SYNTAXES[\"deprecated-system-color\"].syntax\r\n    ),\r\n    \"hash-token\": wrapPattern(),\r\n    \"declaration-value\": wrapPattern(),\r\n    \"lab()\": wrapPattern(),\r\n    \"lch()\": wrapPattern(),\r\n    \"attr-name\": pickStringPattern(function (name) {\r\n        return name;\r\n    }),\r\n    \"type-or-unit\": wrapPattern(),\r\n    \"attr-fallback\": wrapPattern(),\r\n}\r\n\r\nfor (const [name, syntax] of SHARING_SYNTAXES) {\r\n\r\n\r\n    setSharingSyntax(name, syntax);\r\n}\r\nfunction getSharingAnalyzer(name: string) {\r\n    return SHARING_DATA_TYPES_ANALYZER_MAP[name];\r\n}\r\nfunction setSharingSyntax(name: string, syntax: string) {\r\n    let pattern: IPattern;\r\n    function getPattern() {\r\n        if (!pattern) {\r\n            pattern = buildPattern(syntax);\r\n        }\r\n        return pattern;\r\n    }\r\n\r\n    DATA_TYPES_PATTERN_MAP[name] = wrapPattern(function (next) {\r\n        const pattern = DATA_TYPES_PATTERN_MAP[name] = getPattern();\r\n\r\n        return pattern.walker(next);\r\n    });\r\n\r\n    let analyzer: IAnalyzer;\r\n    return SHARING_DATA_TYPES_ANALYZER_MAP[name] = function (env) {\r\n        if (!analyzer) {\r\n            analyzer = buildAnalyzer(getPattern());\r\n            SHARING_DATA_TYPES_ANALYZER_MAP[name] = analyzer;\r\n        }\r\n        return analyzer(env);\r\n    }\r\n}\r\n\r\nfunction wrapPattern(walker: IWalker = function () { return function () { } }): IPattern {\r\n    return { walker };\r\n}\r\n\r\nfunction checkRange(value: number, range: [number, number]) {\r\n    return !range || range[0] <= value && range[1] >= value;\r\n}\r\n\r\nfunction getCachePattern(name: string) {\r\n    return DATA_TYPES_PATTERN_MAP[name]\r\n        || (DATA_TYPES_PATTERN_MAP[name] = lazyInitPattern(name));\r\n}\r\n\r\nfunction valuesPattern(units: Array<string>, optionalUnit?: boolean, ignoreCase?: boolean) {\r\n    const unitSet = new Set(units);\r\n    return pickStringPattern(\r\n        function (value) {\r\n            const res = getValue(value, unitSet, optionalUnit, ignoreCase);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction lazyInitPattern(\r\n    name: string,\r\n    syntax?: string\r\n): IPattern {\r\n\r\n    if (syntax === undefined) {\r\n        if (VDS_SYNTAXES[name]) {\r\n            syntax = VDS_SYNTAXES[name].syntax;\r\n        }\r\n        /* IFDEBUG */\r\n        else {\r\n            debugger;\r\n        }\r\n        /* FIDEBUG */\r\n    }\r\n    let pattern: IPattern;\r\n\r\n    return {\r\n        walker(next) {\r\n            return (\r\n                pattern || (pattern = buildPattern(syntax))\r\n            ).walker(next);\r\n        }\r\n    };\r\n\r\n}\r\n\r\n\r\nfunction pickArrayPattern(match: (token: Array<any>, arg?: any) => any) {\r\n    return wrapPattern(\r\n        walker(function (env, isFinal, arg) {\r\n            const value = env.token;\r\n            if (value instanceof Array) {\r\n                const found = match(value, arg);\r\n                if (found !== undefined && env.isSuccess(isFinal, 1)) {\r\n                    env.found.push([found, join(value), env.next()]);\r\n                    return true;\r\n                }\r\n            }\r\n        })\r\n    )\r\n    function join(list: Array<any>) {\r\n        let text = \"\";\r\n        for (let item of list) {\r\n            text += item instanceof Array ? join(item) : item;\r\n        }\r\n        return text;\r\n    }\r\n}\r\nfunction pickStringPattern(match: (token: string, arg?: any) => any) {\r\n    return wrapPattern(\r\n        walker(function (env, isFinal, arg) {\r\n            const value = env.token;\r\n            if (typeof value === \"string\") {\r\n                const found = match(value, arg);\r\n                if (found !== undefined && env.isSuccess(isFinal, 1)) {\r\n                    env.found.push([found, value, env.next()]);\r\n                    return true;\r\n                }\r\n            }\r\n        })\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction getValue(\r\n    text: string,\r\n    unitSet: Set<string>,\r\n    optionalUnit?: boolean,\r\n    ignoreCase?: boolean\r\n) {\r\n\r\n    let value: number, unit: string;\r\n    let found = text.match(/^(\\+|-)?\\d*(\\.\\d+)?/)[0];\r\n    if (\r\n        found\r\n        && !isNaN(value = parseFloat(found))\r\n    ) {\r\n        if (!optionalUnit || value !== 0 || found.length !== text.length) {\r\n            unit = text.slice(found.length);\r\n            ignoreCase && (unit = unit.toLowerCase());\r\n            if (!unitSet.has(unit)) {\r\n                return;\r\n            }\r\n        }\r\n        return [value, unit];\r\n    }\r\n}","\r\nexport default\r\n    `<color>\r\nwhere \r\n<color> = <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>\r\n\r\nwhere \r\n<rgb()> = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )\r\n<rgba()> = rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )\r\n<hsl()> = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hsla()> = hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hwb()> = hwb( [<hue> | none] [<percentage> | none] [<percentage> | none] [ / [<alpha-value> | none] ]? )\r\n\r\nwhere \r\n<alpha-value> = <number> | <percentage>\r\n<hue> = <number> | <angle>\r\n`;","\r\nexport default\r\n    `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?\r\nwhere \r\n<length-percentage> = <length> | <percentage>`","export default\r\n    `content | <'width'>`","export default\r\n    `<number>`","export default\r\n    `<number>`","export default\r\n    `[ <family-name> | <generic-family> ]#\r\nwhere \r\n<family-name> = <string> | <custom-ident>+\r\n<generic-family> = serif | sans-serif | cursive | fantasy | monospace`","export default\r\n    `<absolute-size> | <relative-size> | <length-percentage>\r\nwhere \r\n<absolute-size> = xx-small | x-small | small | medium | large | x-large | xx-large | xxx-large\r\n<relative-size> = larger | smaller\r\n<length-percentage> = <length> | <percentage>`","export default\r\n    `<font-stretch-absolute>\r\nwhere \r\n<font-stretch-absolute> = normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | <percentage>`\r\n\r\n","export default\r\n    `normal | italic | oblique <angle>?`","export default\r\n    `<font-weight-absolute> | bolder | lighter\r\nwhere \r\n<font-weight-absolute> = normal | bold | <number [1,1000]>`","export default\r\n    `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\r\nwhere \r\n<length-percentage> = <length> | <percentage>`","export default\r\n    `normal | <number> | <length> | <percentage>`","export default\r\n    `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\r\nwhere \r\n<length-percentage> = <length> | <percentage>`","import builder from './parser'\r\n\r\nexport * from './parser'\r\nexport * from './data-types'\r\nexport * from './utils'\r\nexport default builder","\r\nimport { Scanner, OPERATIONS, Token, IPosition, unwrapTokens } from 'astry';\r\n\r\nimport {\r\n    MATCH_CSS_ATTRIBUTE_VALUE,\r\n} from './css-grammar'\r\nimport vdsTokenizer from './tokenizer'\r\nimport { getCachePattern } from './data-types'\r\nimport {\r\n    getRange,\r\n    walker,\r\n    MatchEnv,\r\n    IPattern,\r\n    IFound,\r\n    IMatchFunc,\r\n    IWalker,\r\n    matchUnits,\r\n    matchManyTimes,\r\n} from './utils'\r\n\r\nexport {\r\n    Pattern, IAnalyzer, DATA_TYPES_MARK,\r\n    buildAnalyzer, buildPattern\r\n}\r\nexport default buildAnalyzer;\r\n\r\n\r\n\r\nconst DATA_TYPES_MARK = Symbol(\"DATA_TYPES_MARK\");\r\n\r\ntype ITokens = Array<any>;\r\ntype IAnalyzer = (env: string | ITokens | MatchEnv) => MatchEnv;\r\n\r\n\r\nconst UNARY_OPERATOR_SET = new Set([\"{}\", \"*\", \"+\", \"?\", \"#\", \"!\"]);\r\nconst BINARY_OPERATOR_LIST = [\"=\", \"|\", \"||\", \"&&\", \"\"/*, \"[]\"*/];  // 包含顺序信息（结合优先级）的列表\r\nconst SPECIFIC_CASE_SET = new Set([\"inherit\", \"initial\", \"unset\"]);\r\n\r\nconst cavTokenizer = new Scanner(MATCH_CSS_ATTRIBUTE_VALUE);\r\n\r\nconst POLYFILL_WALK_FUNC: IMatchFunc = function (env, isFinal) {\r\n    return env.isSuccess(isFinal, 0);\r\n}\r\n\r\n\r\n\r\n\r\nfunction buildAnalyzer(syntax: string | IPattern, outMap?: Map<string, Pattern>): IAnalyzer {\r\n\r\n    const pattern = typeof syntax === \"string\"\r\n        ? buildPattern(syntax, outMap)\r\n        : syntax;\r\n\r\n    const match = pattern.walker(null);\r\n\r\n    return function (input: string | ITokens) {\r\n\r\n        const env = new MatchEnv(\r\n            typeof input === \"string\" ?\r\n                unwrapTokens(cavTokenizer.scan(input).tokens)\r\n                : input,\r\n            pattern\r\n        );\r\n\r\n        if (env.tokens.length === 1 && SPECIFIC_CASE_SET.has(env.token)) {\r\n            env.found = [\r\n                [DATA_TYPES_MARK, \"specific-case\", 1],\r\n                [env.token, env.token, env.next()]\r\n            ];\r\n            env.success = true;\r\n            return env;\r\n        }\r\n        env.success = !!match(env, true) && !env.token;\r\n        return env;\r\n    }\r\n}\r\n\r\nfunction buildPattern(syntax: string, outMap: Map<string, Pattern> = new Map()) {\r\n\r\n    const tokens = vdsTokenizer.scan(syntax).tokens;\r\n\r\n    const refMap: Map<string, Pattern> = new Map();\r\n\r\n    for (let i = tokens.length - 1; i >= 0; i -= 1) {\r\n        const token = tokens[i];\r\n        const firstToken = token[0];\r\n        if (\r\n            token.length === 1\r\n            && firstToken instanceof Token\r\n            && firstToken.value === \"where\"\r\n        ) {\r\n            continue;\r\n        }\r\n        parseStatement(token, refMap, outMap);\r\n    }\r\n    return outMap.get(Array.from(outMap.keys()).pop()); // 最后一个元素\r\n    //return outMap.values().next().value;\r\n}\r\n\r\nfunction parseStatement(\r\n    statement: Array<any>,\r\n    refMap: Map<string, IPattern>,\r\n    outMap: Map<string, IPattern>\r\n): IPattern {\r\n    let pattern = parsePattern(statement, refMap, outMap);\r\n\r\n    if (!(pattern instanceof EqualSign)) {\r\n        const id = \"\";\r\n        if (outMap.has(id)) {\r\n            pattern = new SingleBar(\r\n                new ExclamationPoint(outMap.get(id))\r\n            ).add(pattern);\r\n        }\r\n        outMap.set(id, pattern);\r\n    }\r\n\r\n    return pattern;\r\n}\r\n\r\nfunction getQuotesLiteral(tokens: any): [string, IPosition, IPosition] {\r\n    if (tokens instanceof Array) {\r\n        const hack: Token = tokens[0];\r\n\r\n        const hackEnd: Token = tokens[tokens.length - 1];\r\n        return [\r\n            tokens.slice(1, -1).join(\"\"),\r\n            hack.loc.start,\r\n            hackEnd.loc.end\r\n        ]\r\n    }\r\n}\r\n\r\nfunction parsePattern(\r\n    tokens: Array<any>,\r\n    refMap: Map<string, IPattern>,\r\n    outMap: Map<string, IPattern>\r\n): IPattern {\r\n    const units: [IPattern?, ...any] = [];\r\n    let pattern: IPattern\r\n    for (let index = 0, length = tokens.length; index < length; index += 1) {\r\n        let token = tokens[index];\r\n\r\n        let adhesive = getQuotesLiteral(token);\r\n\r\n        if (adhesive) {\r\n            // https://drafts.csswg.org/css-values-3/#component-types\r\n            // 处理可能出现的不作为特殊标记使用的 '+' '*' 'xxx' 等情况\r\n            let isAdjacent = 1;\r\n            while (true) {\r\n                let [value, start, end] = adhesive;\r\n                if (pattern instanceof Value && pattern.end.offset === start.offset) {\r\n                    pattern.data += value;\r\n                    pattern.end = end;\r\n                } else {\r\n                    if (pattern) {\r\n                        units.push(\r\n                            pattern,\r\n                            [\"\", BINARY_OPERATOR_LIST.indexOf(\"\")]\r\n                        );\r\n                    }\r\n                    pattern = new Value(new Token(value, start, end));\r\n                }\r\n\r\n                if (isAdjacent-- && index + 1 < length) {\r\n                    token = tokens[index + 1]\r\n                    adhesive = getQuotesLiteral(token);\r\n                    if (adhesive) {\r\n                        isAdjacent = 1;\r\n                    } else if (\r\n                        token instanceof Token\r\n                        && token.loc.start.offset === end.offset\r\n                        && !isUnaryOperator(token.value)\r\n                        && !isBinaryOperator(token.value)\r\n                    ) {\r\n                        adhesive = [token.value, token.loc.start, token.loc.end];\r\n                    } else {\r\n                        break;\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n                index += 1;\r\n            }\r\n\r\n        } else if (!pattern) {\r\n            pattern = parseUnitPattern(token, refMap, outMap);\r\n        } else {\r\n            let op = token.value;\r\n            if (isUnaryOperator(op)) {\r\n                pattern = parseUnaryPattern(pattern, op, token.content);\r\n            } else {\r\n                if (!isBinaryOperator(op)) {\r\n                    op = \"\";\r\n                    index -= 1;\r\n                }\r\n                units.push(pattern, [op, BINARY_OPERATOR_LIST.indexOf(op)]);\r\n                pattern = null;\r\n            }\r\n        }\r\n    }\r\n    pattern && units.push(pattern);\r\n\r\n    while (units.length > 1) {\r\n        let index = units.length - 2, maxp: number = -1, maxi = index;\r\n        do {\r\n            let precedence: number = units[index][1]\r\n            if (precedence >= maxp) {\r\n                maxp = precedence;\r\n                maxi = index;\r\n            }\r\n            index -= 2;\r\n        } while (index > 0)\r\n\r\n        do {\r\n            units.splice(\r\n                maxi - 1, 3,\r\n                parseBinaryPattern(\r\n                    <Pattern>units[maxi - 1],\r\n                    units[maxi][0],\r\n                    <Pattern>units[maxi + 1],\r\n                    refMap,\r\n                    outMap\r\n                )\r\n            );\r\n            //maxi -= 2;\r\n        } while (maxi < units.length - 1 && units[maxi][1] === maxp)\r\n    }\r\n    return units[0];\r\n}\r\n\r\nfunction isUnaryOperator(op: string) {\r\n    return UNARY_OPERATOR_SET.has(op);\r\n}\r\nfunction isBinaryOperator(op: string) {\r\n    return BINARY_OPERATOR_LIST.includes(op);\r\n}\r\n\r\n\r\nabstract class Pattern implements IPattern {\r\n    match?(env: MatchEnv, isFinal: boolean, arg: any): boolean | void {\r\n        return false;\r\n    }\r\n    walker(next: IMatchFunc): IMatchFunc {\r\n        return walker(this.match.bind(this))(next);\r\n    }\r\n}\r\n\r\n\r\n\r\nclass BinaryPattern extends Pattern {\r\n    units: Array<IPattern>;\r\n    constructor(\r\n        public pattern: Pattern,\r\n        protected refMap?: Map<string, IPattern>,\r\n        protected outMap?: Map<string, IPattern>\r\n    ) {\r\n        super();\r\n        this.units = [pattern];\r\n    }\r\n    /*\r\n    constructor(pattern: IPattern) {\r\n        super();\r\n        this.units = [pattern];\r\n    }*/\r\n    add(pattern: IPattern) {\r\n        this.units.push(pattern);\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\nclass Separate extends BinaryPattern {\r\n    // https://drafts.csswg.org/css-values-3/#component-types\r\n    units: [IPattern, Value, IPattern];\r\n    walker(next: IMatchFunc): IMatchFunc {\r\n\r\n        const [left, separator, right] = this.units;\r\n\r\n        let pattern: Juxtaposition;\r\n        if (left) {\r\n            pattern = new Juxtaposition(new ExclamationPoint(left));\r\n            pattern.add(separator);\r\n        }\r\n\r\n        if (right) {\r\n            pattern = new Juxtaposition(pattern ? new QuestionMark(pattern) : separator);\r\n            pattern.add(new ExclamationPoint(right));\r\n        }\r\n\r\n        return new QuestionMark(pattern).walker(next);\r\n\r\n    }\r\n}\r\n\r\nclass Juxtaposition extends BinaryPattern {\r\n    // https://drafts.csswg.org/css-values-3/#component-types\r\n\r\n    add(pattern: IPattern) {\r\n        const units = this.units;\r\n        const prev = units[units.length - 1];\r\n\r\n\r\n        if (pattern instanceof Value && pattern.data === \",\") {\r\n            switch (true) {\r\n                case prev instanceof QuestionMark:\r\n                case prev instanceof Separate && prev.units.length >= 3:\r\n                    /*case prev instanceof CurlyBraces:\r\n                    case prev instanceof Asterisk:*/\r\n                    pattern = new Separate(pattern);\r\n                    (<Separate>pattern).units.unshift(units.pop());\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pattern instanceof QuestionMark:\r\n                    if (prev instanceof Value && prev.data === \",\") {\r\n                        pattern = new Separate(pattern);\r\n                        (<Separate>pattern).units.unshift(null, units.pop());\r\n                    } else if (prev instanceof Separate && prev.units.length <= 3) {\r\n                        prev.add(pattern);\r\n                        pattern = units.pop();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        units.push(pattern);\r\n\r\n        return this;\r\n    }\r\n\r\n    walker(next: IMatchFunc) {\r\n        return this.units.reduceRight(\r\n            function (walk, pattern) { return pattern.walker(walk) },\r\n            next\r\n        );\r\n    }\r\n}\r\n\r\nclass DoubleAmpersand extends BinaryPattern {\r\n    walker(next: IMatchFunc) {\r\n        return matchUnits(next, this.units, true);\r\n    }\r\n}\r\nclass DoubleBar extends BinaryPattern {\r\n    walker(next: IMatchFunc) {\r\n        return matchUnits(next, this.units, false);\r\n    }\r\n}\r\n\r\n\r\nclass SingleBar extends BinaryPattern {\r\n    constructor(pattern: IPattern) {\r\n        super(pattern);\r\n    }\r\n    values: Set<string>;\r\n    add(pattern: IPattern) {\r\n        const units = this.units;\r\n\r\n        if (pattern instanceof Value) {\r\n            // 多个 互斥 值使用 Set 查找匹配降低消耗\r\n            if (!this.values) {\r\n                const prev = units[0];\r\n                if (prev instanceof Value) {\r\n                    units[0] = new Values(\r\n                        this.values = new Set([prev.data, pattern.data])\r\n                    );\r\n                    return;\r\n                }\r\n                units.unshift(pattern);\r\n            } else {\r\n                this.values.add(pattern.data);\r\n            }\r\n        } else {\r\n            units.push(pattern);\r\n        }\r\n        return this;\r\n    }\r\n    walker(next: IMatchFunc): IMatchFunc {\r\n\r\n        const matches = this.units.map(pattern => pattern.walker(next));\r\n        return function (env, isFinal) {\r\n            const index = env.index;\r\n            let maxIndex: number;\r\n            let maxRecord: IFound;\r\n            const res = env.found;\r\n            for (let i = 0; i < matches.length; i += 1) {\r\n\r\n                env.found = [];\r\n                if (matches[i](env, isFinal)) {\r\n                    if (env.compareIndex(maxIndex) < 0) {\r\n                        maxIndex = env.index;\r\n                        maxRecord = env.found;\r\n                        if (env.isSuccess(true, 0)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    env.index = index;\r\n                }\r\n            }\r\n            env.found = res;\r\n            if (maxRecord) {\r\n                res.push(...maxRecord);\r\n                env.index = maxIndex;\r\n                return true;\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\nclass EqualSign extends BinaryPattern {\r\n\r\n    add(pattern: IPattern) {\r\n        const { units, refMap, outMap } = this;\r\n\r\n        for (const id of units) {\r\n            if (id instanceof Refer) {\r\n                refMap.set(id.name, pattern);\r\n            } else if (id instanceof Value) {\r\n                outMap.set(id.data, pattern);\r\n            } else {\r\n                debugger;\r\n            }\r\n        }\r\n        units.push(pattern);\r\n        return this;\r\n    }\r\n    walker(next: IMatchFunc) { //   让 [] 中可以存在赋值表达式  \r\n        const units = this.units;\r\n        return units[units.length - 1].walker(next);\r\n    }\r\n}\r\n\r\nconst BINARY_PATTERN_MAP = {\r\n    \"|\": SingleBar,\r\n    \"||\": DoubleBar,\r\n    \"&&\": DoubleAmpersand,\r\n    \"\": Juxtaposition,\r\n    \"=\": EqualSign\r\n}\r\nfunction parseBinaryPattern(\r\n    left: IPattern | BinaryPattern,\r\n    op: string,\r\n    right: IPattern,\r\n    refMap: Map<string, IPattern>,\r\n    outMap: Map<string, IPattern>\r\n) {\r\n    const Wrapper = BINARY_PATTERN_MAP[op];\r\n\r\n    if (!(left instanceof Wrapper)) {\r\n        left = new Wrapper(left, refMap, outMap);\r\n    }\r\n    (<BinaryPattern>left).add(right);\r\n    return left;\r\n}\r\n\r\nclass UnaryPattern extends Pattern {\r\n    nonGreedy?: boolean;\r\n    constructor(protected pattern: IPattern, arg2?: any) { super(); }\r\n}\r\nclass Asterisk extends UnaryPattern {\r\n    walker(next: IMatchFunc) {\r\n        return matchManyTimes(next, this.pattern, 0, Number.MAX_SAFE_INTEGER, this.nonGreedy);\r\n    }\r\n}\r\nclass PlusSign extends UnaryPattern {\r\n    walker(next: IMatchFunc) {\r\n        return matchManyTimes(next, this.pattern, 1, Number.MAX_SAFE_INTEGER, this.nonGreedy);\r\n    }\r\n}\r\nclass QuestionMark extends UnaryPattern {\r\n    nonGreedy = true;\r\n    constructor(protected pattern: IPattern, arg2?: any) {\r\n        super(pattern, arg2);\r\n        switch (true) {\r\n            case pattern instanceof Asterisk:\r\n            case pattern instanceof PlusSign:\r\n            case pattern instanceof CurlyBraces:\r\n            case pattern instanceof HashMark:\r\n                //this.nonGreedy = false;\r\n                (<UnaryPattern>pattern).nonGreedy = true;\r\n                break;\r\n        }\r\n    }\r\n    walker(next: IMatchFunc) {\r\n        /*if (!this.nonGreedy) {\r\n            return this.pattern.walker(next);\r\n        }*/\r\n        return matchManyTimes(next, this.pattern, 0, 1, this.nonGreedy);\r\n\r\n    }\r\n}\r\n\r\nclass CurlyBraces extends UnaryPattern {\r\n    constructor(pattern: IPattern, public range: [number, number]) {\r\n        super(pattern);\r\n        if (pattern instanceof HashMark) {\r\n            pattern.range = range;\r\n            return pattern;\r\n        }\r\n    }\r\n    walker(next: IMatchFunc) {\r\n        return matchManyTimes(next, this.pattern, this.range[0], this.range[1], this.nonGreedy);\r\n    }\r\n}\r\n\r\n\r\nclass HashMark extends UnaryPattern {\r\n    range: [number, number] = [1, Number.MAX_SAFE_INTEGER];\r\n    walker(next: IMatchFunc) {\r\n        const [min, max] = this.range;\r\n        if (max >= 1) {\r\n\r\n            const pattern = new Juxtaposition(this.pattern)\r\n                .add(\r\n                    new CurlyBraces(\r\n                        new Juxtaposition(\r\n                            new Value(new Token(\",\", null, null))\r\n                        ).add(this.pattern),\r\n                        [min - 1, max - 1]\r\n                    )\r\n                );\r\n            return (min >= 1 ? pattern : new QuestionMark(pattern)).walker(next);\r\n        } else {\r\n            return next || POLYFILL_WALK_FUNC;\r\n        }\r\n    }\r\n}\r\nclass ExclamationPoint extends UnaryPattern {\r\n    walker(next: IMatchFunc) {\r\n        let index: number;\r\n        const match = this.pattern.walker(function (env: MatchEnv, isFinal: boolean) {\r\n            if (env.compareIndex(index) < 0) {\r\n                return next ? next(env, isFinal) : env.isSuccess(isFinal, 0);\r\n            }\r\n        });\r\n        return function (env: MatchEnv, isFinal: boolean) {\r\n            index = env.index;\r\n            return match(env, isFinal);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst UNARY_PATTERN_MAP = {\r\n    \"*\": Asterisk,\r\n    \"+\": PlusSign,\r\n    \"?\": QuestionMark,\r\n    \"{}\": function (pattern: IPattern, tokens: Array<any>) {\r\n        return new CurlyBraces(pattern, getRange(tokens));\r\n    },\r\n    \"#\": HashMark,\r\n    \"!\": ExclamationPoint,\r\n}\r\nfunction parseUnaryPattern(pattern: IPattern, op: string, content?: Array<string>): Pattern {\r\n    return new UNARY_PATTERN_MAP[op](pattern, content);\r\n}\r\n\r\nclass Refer extends Pattern {\r\n    pattern: IPattern;\r\n    name: string;\r\n    range?: [number, number];\r\n    useQuote?: boolean;\r\n    useCachePattern: boolean;\r\n    constructor(\r\n        { name, range, useQuote }: {\r\n            name: string,\r\n            range?: [number, number],\r\n            useQuote?: boolean\r\n        },\r\n        patternMap: Map<string, IPattern>\r\n    ) {\r\n        super();\r\n\r\n        let pattern = !useQuote && patternMap.get(name);\r\n        if (pattern) {\r\n            this.pattern = pattern;\r\n        } else {\r\n            this.useCachePattern = true;\r\n            Object.defineProperty(this, \"pattern\", {\r\n                get() {\r\n                    return pattern || (pattern = getCachePattern(name));\r\n                }\r\n            });\r\n        }\r\n\r\n        this.range = range;\r\n        this.useQuote = useQuote;\r\n        this.name = name;\r\n    }\r\n    walker(next: IMatchFunc): IMatchFunc {\r\n        // https://drafts.csswg.org/css-values-3/#numeric-ranges\r\n\r\n        const { pattern, range, name } = this;\r\n        //const id = this.useQuote ? `'${name}'` : name;\r\n\r\n        /**\r\n         * 不能直接在这里获得 match 方法，\r\n         * 这样会导致直接构造所有分支（可能存在循环引用的分支）\r\n         */\r\n        let match: IMatchFunc;\r\n        let right: number;\r\n\r\n        return function (env: MatchEnv, isFinal: boolean) {\r\n            /**\r\n             * 这里按需 ( 按实际输入内容深度 ) 构造下一个该出现的分支\r\n             */\r\n            if (!match) {\r\n                next || (next = POLYFILL_WALK_FUNC);\r\n                match = pattern.walker(\r\n                    function (env, isFinal) {\r\n                        /**\r\n                         * 一个 right 变量可能会被处于不同环境的同一个 match 方法嵌套使用\r\n                         * 这里使用 end 中间变量使之作用周期不冲突\r\n                         */\r\n                        const end = env.index;\r\n                        if (next(env, isFinal)) {\r\n                            right = end - 1;\r\n                            return true;\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            let length = env.found.length;\r\n            if (match(env, isFinal, range)) {\r\n                if (env.found.length > length) {\r\n                    env.found.splice(length, 0, [DATA_TYPES_MARK, name, right])\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\nclass Group extends Pattern {\r\n    pattern: IPattern;\r\n    constructor(\r\n        { content }: { content: Array<any> },\r\n        refMap: Map<string, IPattern>,\r\n        outMap: Map<string, IPattern>\r\n    ) {\r\n        super();\r\n        this.pattern = parsePattern(content, refMap, outMap);\r\n    }\r\n    walker(next: IMatchFunc) {\r\n        return this.pattern.walker(next);\r\n    }\r\n}\r\nclass Value extends Pattern {\r\n    data: string;\r\n    /**\r\n     * 保留位置信息用于在编译期可能出现的上下文相关处理\r\n     */\r\n    start: IPosition;\r\n    end: IPosition;\r\n    constructor({ value: data, loc: { start, end } }: Token) {\r\n        super();\r\n        this.data = data;\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    match(env: MatchEnv, isFinal: boolean) {\r\n        const { token } = env;\r\n        if (token === this.data && env.isSuccess(isFinal, 1)) {\r\n            env.found.push([token, token, env.next()]);\r\n            return true;\r\n        }\r\n    }\r\n}\r\nclass Values extends Pattern {\r\n    constructor(public data: Set<string>) { super() }\r\n    match(env: MatchEnv, isFinal: boolean) {\r\n        const { token } = env;\r\n        if (env.isSuccess(isFinal, 1) && this.data.has(token)) {\r\n            env.found.push([token, token, env.next()]);\r\n            return true;\r\n        }\r\n    }\r\n}\r\nfunction parseUnitPattern(token: any, refMap: Map<string, IPattern>, outMap: Map<string, IPattern>): Pattern {\r\n    switch (token.type) {\r\n        case \"DataTypes\":\r\n            return new Refer(token, refMap);\r\n        case \"Brackets\":\r\n            return new Group(token, refMap, outMap);\r\n        default:\r\n            return new Value(token);\r\n    }\r\n}\r\n","import {\r\n    Scanner, OPERATIONS, HOOK_MODE, IScanEnv,\r\n    IPattern, Token,\r\n    IPosition, ISourceLocation, UseKey,\r\n} from 'astry'\r\n\r\n\r\nconst {\r\n    FINISH,\r\n    WRAP, UNWRAP, UNWRAP_ALL,\r\n    OPTION,\r\n    SPLIT,\r\n    NO_COLLECT, NO_CAPTURE,\r\n    MARK_AS_ROOT, FORK_IN_PARENT, FORK_IN_ROOT,\r\n    END, END_ON_LEFT,\r\n    useKey,\r\n    node, key, pick, hook, pipe, prev, merge,\r\n\r\n    MATCH_BEGIN,\r\n    MATCH_END,\r\n    MATCH_EOF,\r\n    MERGE_ALL_TOKENS\r\n} = OPERATIONS;\r\nconst MATCH_WHITE_SPACE_CHARACHER: IPattern = [` `, `\\t`];  // 换行在这里作为断句符单独处理\r\nconst CLEAR_WHITE_SPACE_CHARACHER: IPattern = [\r\n    [NO_COLLECT, MATCH_WHITE_SPACE_CHARACHER]\r\n];\r\n\r\nconst THROW_TOKEN_ERROR = hook(function (env, start, end) {\r\n    console.log(\"Invalid or unexpected token\", start, end);\r\n}, HOOK_MODE.RESOLVE);\r\n\r\n\r\nconst MATCH_QUOTES = [\r\n    [\"'\", WRAP, \"'\", UNWRAP]\r\n];\r\n\r\nconst MATCH_RANGE_DEFINITION_NOTATION = [\r\n    [\r\n        NO_COLLECT, \"[\", WRAP,\r\n        [\r\n            [pipe(parseNumber), NO_COLLECT, \",\"],\r\n            [pipe(parseNumber), NO_COLLECT, \"]\", UNWRAP]\r\n        ],\r\n\r\n    ]\r\n];\r\nconst MATCH_DATA_TYPES = [\r\n    [\r\n        node(\"DataTypes\"),\r\n        NO_COLLECT, \"<\", WRAP,\r\n        pipe(function (token: Token) {\r\n            return useKey(\"name\", token.value);\r\n        }),\r\n        [\r\n            [\">\", pipe(function () { return useKey(\"value\", \"<>\"); }), UNWRAP],\r\n            [CLEAR_WHITE_SPACE_CHARACHER],\r\n            [\r\n                pick(function (range: Array<number>) {\r\n                    return useKey(\"range\", range)\r\n                }),\r\n                MATCH_RANGE_DEFINITION_NOTATION\r\n            ],\r\n            [pick(function (tokens: Array<Token>) {\r\n                const token = tokens.slice(1, -1)[0];\r\n                if (token) {\r\n                    return [\r\n                        useKey(\"name\", token.value),\r\n                        useKey(\"useQuote\", true),\r\n                    ]\r\n                }\r\n            }), MATCH_QUOTES]\r\n        ]\r\n\r\n    ]\r\n];\r\nconst MATCH_BRACKETS = [\r\n    [\r\n        node(\r\n            \"Brackets\",\r\n            function ([tokens]: [Array<Token[]>]) {\r\n                return [useKey(\"content\", tokens), useKey(\"value\", \"[]\")];\r\n            }\r\n        ),\r\n        NO_COLLECT, \"[\", WRAP,\r\n        FORK_IN_ROOT,\r\n        NO_COLLECT, \"]\", UNWRAP\r\n    ]\r\n];\r\nconst MATCH_CURLY_BRACES = [\r\n    [\r\n        node(\r\n            \"CurlyBraces\",\r\n            function ([tokens]: [Array<Token[]>]) {\r\n                return [useKey(\"content\", tokens), useKey(\"value\", \"{}\")];\r\n            }\r\n        ),\r\n        NO_COLLECT, \"{\", WRAP,\r\n        [\r\n            [CLEAR_WHITE_SPACE_CHARACHER],\r\n            [pipe(parseNumber), \",\"],\r\n            [pipe(parseNumber), NO_COLLECT, \"}\", UNWRAP]\r\n        ]\r\n    ]\r\n];\r\n\r\nconst MATCH_STATEMENT_END = [\r\n    \"\\n\",\r\n    [MATCH_EOF]\r\n];\r\n\r\n\r\nexport default new Scanner([\r\n    [CLEAR_WHITE_SPACE_CHARACHER],\r\n    [\r\n        pick(function (tokens: Array<Token>) {\r\n            if (tokens.length) {\r\n                return tokens;\r\n            }\r\n        }),\r\n        MATCH_BEGIN, WRAP,\r\n        MARK_AS_ROOT,\r\n        [\r\n            [NO_COLLECT, MATCH_STATEMENT_END, UNWRAP],\r\n            [CLEAR_WHITE_SPACE_CHARACHER],\r\n            [MATCH_QUOTES],\r\n            [MATCH_DATA_TYPES],\r\n            [MATCH_BRACKETS],\r\n            [MATCH_CURLY_BRACES],\r\n            \"*\",\r\n            \"+\",\r\n            \"?\",\r\n            \"!\",\r\n            [\r\n                [\r\n                    \",\",\r\n                    \"&&\",\r\n                    \"||\",\r\n                    \"|\",\r\n                    \"=\",\r\n                ],\r\n                NO_COLLECT,\r\n                OPTION,\r\n                [\r\n                    [\r\n                        [` `, `\\t`, `\\n`],\r\n                        FORK_IN_PARENT\r\n                    ]\r\n                ]\r\n            ]\r\n\r\n\r\n        ]\r\n    ],\r\n\r\n]);\r\n\r\nfunction parseNumber({ value }: Token) {\r\n    if (value === \"∞\" || value === \"+∞\") {\r\n        return Number.POSITIVE_INFINITY;\r\n    }\r\n    if (value === \"−∞\") {\r\n        return Number.NEGATIVE_INFINITY;\r\n    }\r\n    return Number(value);\r\n}\r\n\r\n","\r\n\r\ntype IMatchFunc = (env: MatchEnv, isFinal: boolean, arg?: any) => boolean | void;\r\ntype IFound = Array<[any, string, number]>;\r\n\r\ntype IWalker = (next: IMatchFunc) => IMatchFunc;\r\n\r\ninterface IPattern {\r\n    match?: IMatchFunc,\r\n    walker: IWalker\r\n}\r\n\r\nexport {\r\n    getRange,\r\n    walker,\r\n    MatchEnv,\r\n    IPattern,\r\n    IFound,\r\n    IMatchFunc,\r\n    IWalker,\r\n    matchUnits,\r\n    matchManyTimes,\r\n}\r\nfunction matchUnits(next: IMatchFunc, patterns: Array<IPattern>, useMatchAll: boolean): IMatchFunc {\r\n\r\n    const matches = patterns.map(pattern => pattern.walker(null));\r\n    const indexs = matches.map((_, index) => index);\r\n\r\n    const comMatches = next && patterns.map(pattern => pattern.walker(next));\r\n\r\n    return function (env: MatchEnv, isFinal: boolean) {\r\n        let maxIndex: number;\r\n        let maxRecord: IFound;\r\n        const res = env.found;\r\n        env.found = [];\r\n\r\n        walk(indexs);\r\n        env.found = res;\r\n        if (maxRecord) {\r\n            res.push(...maxRecord);\r\n            env.index = maxIndex;\r\n            return true;\r\n        }\r\n\r\n        function walk(indexs: Array<number>) {\r\n            const state = env.store();\r\n            const length = indexs.length;\r\n            for (let i = 0; i < length; i += 1) {\r\n                const index = indexs[i];\r\n\r\n                if (!matches[index](env, false)) {\r\n                    continue;\r\n                }\r\n                if (length > 1 && walk(indexs.slice(0, i).concat(indexs.slice(i + 1)))) {\r\n                    return true;\r\n                }\r\n\r\n                if ((useMatchAll && length > 1)) {\r\n                    env.restore(state);\r\n                    continue;\r\n                }\r\n                if (comMatches || isFinal) {\r\n                    env.restore(state);\r\n                    if (!(comMatches || matches)[index](env, isFinal)) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                if (env.compareIndex(maxIndex) < 0) {\r\n                    maxRecord = env.found.slice();\r\n                    maxIndex = env.index;\r\n                    if (env.isSuccess(true, 0)) {\r\n                        return true;\r\n                    }\r\n                }\r\n                env.restore(state);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction matchManyTimes(\r\n    next: IMatchFunc,\r\n    pattern: IPattern,\r\n    min: number,\r\n    max: number,\r\n    nonGreedy?: boolean\r\n): IMatchFunc {\r\n    const match = pattern.walker(null);\r\n\r\n    if (next) {\r\n        const comMatch = pattern.walker(next);\r\n\r\n        return !nonGreedy\r\n            ? function (env, isFinal) {\r\n\r\n                return walk(0);\r\n\r\n                function walk(step: number) {\r\n                    const state = env.store();\r\n                    if (step < max) {\r\n                        if (match(env, false)) {\r\n                            if (\r\n                                walk(step + 1)\r\n                                || (\r\n                                    env.restore(state)\r\n                                    , step >= min - 1\r\n                                    && comMatch(env, isFinal)\r\n                                )\r\n                            ) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (step >= min && next(env, isFinal)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            : function (env, isFinal) {\r\n                if (min <= 0 && next(env, isFinal)) {\r\n                    return true;\r\n                }\r\n                if (max > 0) {\r\n                    const state = env.store();\r\n                    let step = 1;\r\n                    while (true) {\r\n                        if (step >= min && comMatch(env, isFinal)) {\r\n                            return true;\r\n                        }\r\n                        if (++step > max || !match(env, false)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    env.restore(state);\r\n                }\r\n            }\r\n    } else {\r\n        return function (env, isFinal) {\r\n            return walk(0);\r\n\r\n            function walk(step: number) {\r\n                if (step < max) {\r\n                    const state = env.store();\r\n                    if (match(env, false)) {\r\n                        if (\r\n                            walk(step + 1)\r\n                            || (\r\n                                env.restore(state),\r\n                                isFinal\r\n                                && step >= min - 1\r\n                                && match(env, true)\r\n                            )\r\n                        ) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                if (step >= min && env.isSuccess(isFinal, 0)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nfunction walker(match: IMatchFunc) {\r\n    return function (next: IMatchFunc): IMatchFunc {\r\n        if (next) {\r\n            return function (env, isFinal, arg) {\r\n                const state = env.store();\r\n                if (match(env, false, arg)) {\r\n                    if (next(env, isFinal)) {\r\n                        return true;\r\n                    }\r\n                    env.restore(state);\r\n                }\r\n            };\r\n        }\r\n        return match;\r\n    }\r\n}\r\n\r\nclass MatchEnv {\r\n    index: number;\r\n    token: any;\r\n    found: IFound = [];\r\n    success = false;\r\n    constructor(public tokens: Array<any>, public pattern?: IPattern) {\r\n        let index = 0;\r\n\r\n        this.token = tokens[index];\r\n        Object.defineProperties(this, {\r\n            index: {\r\n                get() { return index; },\r\n                set(val: number) {\r\n                    index = val;\r\n                    this.token = this.tokens[index];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    store(): [number, number] {\r\n        return [this.index, this.found.length];\r\n    }\r\n    restore([index, length]: [number, number]) {\r\n        this.index = index;\r\n        this.found.length = length;\r\n    }\r\n    next() {\r\n        const { index, tokens } = this;\r\n        if (tokens.length > index) {\r\n            this.index = index + 1;\r\n        }\r\n        return index;\r\n    }\r\n    prev() {\r\n        const index = this.index;\r\n        if (index > 0) {  // 会使 token = undefined\r\n            this.index = index - 1;\r\n        }\r\n        return index;\r\n    }\r\n    compareIndex(index: number = -1) {\r\n        return index - this.index;\r\n    }\r\n    isSuccess(isFinal: boolean, offset: number) {\r\n        return !isFinal || this.index >= this.tokens.length - offset;\r\n    }\r\n}\r\n\r\n\r\nfunction isPositiveInteger(value: number) {\r\n    return typeof value === \"number\" && value >= 0 && !(value % 1);\r\n}\r\n\r\nfunction getRange(tokens: Array<any>) {\r\n    let index = 0;\r\n    let value = tokens[index];\r\n    const range: [number, number] = [value, value];\r\n\r\n    do {\r\n        value = tokens[index];\r\n        if (!isPositiveInteger(value)) {\r\n            debugger;\r\n        }\r\n        range[index >> 1] = value;\r\n\r\n        index += 2;\r\n        if (index - 1 < tokens.length) {\r\n            if (tokens[index - 1].value !== \",\") {\r\n                debugger;\r\n            } else {\r\n                range[index >> 1] = Number.MAX_SAFE_INTEGER;\r\n            }\r\n        }\r\n    } while (index < tokens.length)\r\n\r\n    return range;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(404);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","__webpack_exports__","SCOPE","OPERATIONS","MARKS","defineProperty","value","unwrapTokens","UseKey","Token","Scanner","NODE","START","BEGIN","CURSOR","BACK_POINT","USE_FOLD","Hook","constructor","this","mode","Node","type","useContent","super","Wrapper","NODE_MAP","eval","use","t","n","tokens","hookPoint","s","i","loc","start","end","r","key","content","push","splice","Array","forEach","Key","Merge","Prev","match","onlyToken","length","slice","Pipe","pipe","Pick","arguments","Call","NoCapture","offset","line","column","FINISH","String","WRAP","UNWRAP","UNWRAP_ALL","OPTION","SPLIT","NO_COLLECT","NO_CAPTURE","MARK_AS_ROOT","FORK_IN_PARENT","FORK_IN_ROOT","END","END_ON_LEFT","useKey","toString","node","pick","hook","prev","merge","MATCH_BEGIN","MATCH_END","MATCH_EOF","MERGE_ALL_TOKENS","reduce","concat","UNFOLD","ROOT","RESOLVE","TYPE","ROLL","PARENT","COLLECT","BUBBING_HOOKS","CAPTURING_HOOKS","SLICE_HOOKS","IGNORE_TESTS","RESOLVE_TYPE_SET","Set","useEscape","useFold","ignoreCase","scanTree","build","assign","scan","input","begin","O","c","u","l","R","toLowerCase","S","f","shift","E","pop","filter","has","unshift","_","trim","RootStack","buildRule","buildKey","create","test","reverse","__webpack_export_target__","__esModule","CLEAR_COMMENT","CLEAR_WHITE_SPACE_CHARACHER","THROW_TOKEN_ERROR","env","console","log","MATCH_STRING","MATCH_CSS_ATTRIBUTE_VALUE","syntaxesContext","SHARING_SYNTAXES","SHARING_DATA_TYPES_ANALYZER_MAP","path","default","COLOR_VALUE_MAP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","LENGTH_UNITS","PERCENTAGE_UNITS","ANGLE_UNITS","TIME_UNITS","FLEX_UNITS","FREQUENCY_UNITS","RESOLUTION_UNITS","DIMENSION_UNITS","unit","DATA_TYPES_PATTERN_MAP","wrapPattern","valuesPattern","pickStringPattern","name","range","num","Number","checkRange","lazyInitPattern","pickArrayPattern","hack","token","replace","color","parseInt","opacity","VDS_SYNTAXES","syntax","setSharingSyntax","pattern","analyzer","getPattern","buildPattern","next","walker","buildAnalyzer","units","optionalUnit","unitSet","res","text","found","isNaN","parseFloat","getValue","undefined","isFinal","arg","isSuccess","join","list","item","getSharingAnalyzer","getCachePattern","DATA_TYPES_MARK","Symbol","UNARY_OPERATOR_SET","BINARY_OPERATOR_LIST","SPECIFIC_CASE_SET","cavTokenizer","POLYFILL_WALK_FUNC","outMap","MatchEnv","success","Map","refMap","firstToken","parseStatement","get","from","statement","parsePattern","EqualSign","SingleBar","ExclamationPoint","add","set","getQuotesLiteral","hackEnd","index","adhesive","isAdjacent","Value","data","indexOf","isUnaryOperator","isBinaryOperator","op","parseUnaryPattern","parseUnitPattern","maxp","maxi","precedence","parseBinaryPattern","includes","Pattern","bind","BinaryPattern","Separate","left","separator","right","Juxtaposition","QuestionMark","reduceRight","walk","values","Values","matches","maxIndex","maxRecord","compareIndex","Refer","BINARY_PATTERN_MAP","matchUnits","UnaryPattern","arg2","Asterisk","matchManyTimes","MAX_SAFE_INTEGER","nonGreedy","PlusSign","CurlyBraces","HashMark","min","max","UNARY_PATTERN_MAP","getRange","useQuote","patternMap","useCachePattern","Group","MATCH_QUOTES","MATCH_RANGE_DEFINITION_NOTATION","parseNumber","MATCH_DATA_TYPES","MATCH_BRACKETS","MATCH_CURLY_BRACES","MATCH_STATEMENT_END","POSITIVE_INFINITY","NEGATIVE_INFINITY","isPositiveInteger","patterns","useMatchAll","indexs","comMatches","state","store","restore","comMatch","step","defineProperties","val","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","call","obj","prop","prototype","hasOwnProperty"],"sourceRoot":""}