{"version":3,"file":"js/../js/test.js","mappings":"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","sources":["webpack://vdsor/./js/data-types/sharing|sync|nonrecursive|/.ts$","webpack://vdsor/./node_modules/astry/dist/js/scanner.js","webpack://vdsor/./js/cav-tokenizer.ts","webpack://vdsor/./js/data-types/index.ts","webpack://vdsor/./js/data-types/sharing/background-color.ts","webpack://vdsor/./js/data-types/sharing/border-radius.ts","webpack://vdsor/./js/data-types/sharing/flex-basis.ts","webpack://vdsor/./js/data-types/sharing/flex-grow.ts","webpack://vdsor/./js/data-types/sharing/flex-shrink.ts","webpack://vdsor/./js/data-types/sharing/font-family.ts","webpack://vdsor/./js/data-types/sharing/font-size.ts","webpack://vdsor/./js/data-types/sharing/font-stretch.ts","webpack://vdsor/./js/data-types/sharing/font-style.ts","webpack://vdsor/./js/data-types/sharing/font-weight.ts","webpack://vdsor/./js/data-types/sharing/grid-auto-columns.ts","webpack://vdsor/./js/data-types/sharing/grid-auto-rows.ts","webpack://vdsor/./js/data-types/sharing/grid-template-columns.ts","webpack://vdsor/./js/data-types/sharing/grid-template-rows.ts","webpack://vdsor/./js/data-types/sharing/grid-template.ts","webpack://vdsor/./js/data-types/sharing/height.ts","webpack://vdsor/./js/data-types/sharing/line-height.ts","webpack://vdsor/./js/data-types/sharing/width.ts","webpack://vdsor/./js/parser.ts","webpack://vdsor/./js/utils.ts","webpack://vdsor/./js/vds-tokenizer.ts","webpack://vdsor/webpack/bootstrap","webpack://vdsor/webpack/runtime/global","webpack://vdsor/webpack/runtime/hasOwnProperty shorthand","webpack://vdsor/./js/test.ts"],"sourcesContent":["var map = {\n\t\"./background-color.ts\": 399,\n\t\"./border-radius.ts\": 682,\n\t\"./flex-basis.ts\": 744,\n\t\"./flex-grow.ts\": 346,\n\t\"./flex-shrink.ts\": 477,\n\t\"./font-family.ts\": 355,\n\t\"./font-size.ts\": 257,\n\t\"./font-stretch.ts\": 751,\n\t\"./font-style.ts\": 828,\n\t\"./font-weight.ts\": 982,\n\t\"./grid-auto-columns.ts\": 4,\n\t\"./grid-auto-rows.ts\": 165,\n\t\"./grid-template-columns.ts\": 415,\n\t\"./grid-template-rows.ts\": 29,\n\t\"./grid-template.ts\": 242,\n\t\"./height.ts\": 320,\n\t\"./line-height.ts\": 208,\n\t\"./width.ts\": 394\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 570;","(()=>{\"use strict\";var __webpack_exports__={};(()=>{var exports=__webpack_exports__,OPERATIONS,MARKS,SCOPE;Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.unwrapTokens=exports.UseKey=exports.Token=exports.OPERATIONS=exports.Scanner=void 0;class Hook{constructor(){this.mode=1}}class Node extends Hook{constructor(type,map,useContent){super(),this.type=type,this.map=map,this.useContent=useContent,this.Wrapper=Node.NODE_MAP[type]||(Node.NODE_MAP[type]=eval(`(function ${type}(){this.type=\"${type}\";})`))}use(e,t,n){let{tokens:o,hookPoint:s}=e;const i=new this.Wrapper;i.loc={start:t,end:n};let r=function(e){i[e.key]=e.value};if(this.useContent){const e=i.content=[];r=function(t){e.push(t)}}o=o.splice(s),this.map&&(o=this.map(o,e,t,n)||o),function e(t){t instanceof Array?t.forEach(e):t instanceof UseKey&&r(t)}(o),e.tokens.push(i)}}Node.NODE_MAP={};class UseKey{constructor(e,t){this.key=e,this.value=t}}exports.UseKey=UseKey;class Key extends Hook{constructor(e,t){super(),this.key=e,this.map=t}use(e,t,n){let{tokens:o,hookPoint:s}=e,i=o[s];this.map&&(i=this.map(i,e,t,n)||i),o.splice(s,1,new UseKey(this.key,i))}}Key.Wrapper=UseKey;class Merge extends Hook{constructor(e){super(),this.map=e}use(e,t,n){let{tokens:o,hookPoint:s}=e;o.push(this.map(o.splice(s),e,t,n))}}class Prev extends Hook{constructor(e,t){super(),this.match=e,this.onlyToken=t}use(e){let{tokens:t,hookPoint:n}=e;n-=1;let o=t[n];if(!this.onlyToken||o instanceof Token){if(this.match){let s=this.match(o,e);if(s&&\"number\"==typeof s&&s!==o.value.length)return void t.splice(n,1,o.slice(0,-s),o.slice(-s))}e.hookPoint-=1}}}class Pipe extends Hook{constructor(e){super(),this.pipe=e,this.mode=4}use(e,t,n){let{tokens:o,hookPoint:s}=e,i=this.pipe(o[s],e,t,n);void 0!==i?o[s]=i:o.splice(s,1)}}class Pick extends Pipe{constructor(){super(...arguments),this.mode=1}}class Call extends Hook{constructor(e,t){super(),this.use=e,this.mode=t}}class NoCapture extends Hook{constructor(){super(),this.mode=2}use(e,t,n){let{tokens:o,hookPoint:s}=e;o.splice(s,1),t.offset<e.offset&&(e.offset=t.offset,e.line=t.line,e.column=t.column)}}!function(e){e.FINISH=new String(\"FINISH\"),e.WRAP=new String(\"WRAP\"),e.UNWRAP=new String(\"UNWRAP\"),e.UNWRAP_ALL=new String(\"UNWRAP_ALL\"),e.OPTION=new String(\"OPTION\"),e.SPLIT=new String(\"SPLIT\"),e.NO_COLLECT=new String(\"NO_COLLECT\"),e.NO_CAPTURE=new String(\"NO_CAPTURE\"),e.MARK_AS_ROOT=new String(\"MARK_AS_ROOT\"),e.FORK_IN_PARENT=new String(\"FORK_IN_PARENT\"),e.FORK_IN_ROOT=new String(\"FORK_IN_ROOT\"),e.END=new String(\"END\"),e.END_ON_LEFT=new String(\"END_ON_LEFT\"),e.useKey=function(e,t){return new UseKey(e.toString(),t)},e.node=function(e,t,n=!1,o=1){const s=new Node(e,t,n);return s.mode=o,s},e.key=function(e,t){return new Key(e,t)},e.pick=function(e){return new Pick(e||function(){})},e.hook=function(e,t=1){return new Call(e,t)},e.pipe=function(e){return new Pipe(e||function(){})},e.prev=function(e,t){return new Prev(e,t)},e.merge=function(e=function(e){return e}){return new Merge(e)},e.MATCH_BEGIN=\"\",e.MATCH_END=\"\",e.MATCH_EOF=[[\"\",\"\"]],e.MERGE_ALL_TOKENS=e.merge((function(e){return e.reduce(((e,t)=>e.concat(t)))})),e.UNFOLD=e.hook((function(e){const{tokens:t,hookPoint:n}=e;for(const e of t.splice(n))e instanceof Array?t.push(...e):t.push(e)}),1)}(OPERATIONS||(OPERATIONS={})),exports.OPERATIONS=OPERATIONS,function(e){e.FINISH=OPERATIONS.FINISH,e.END=OPERATIONS.END,e.END_ON_LEFT=OPERATIONS.END_ON_LEFT,e.UNWRAP=OPERATIONS.UNWRAP,e.WRAP=OPERATIONS.WRAP,e.ROOT=new String(\"ROOT\"),e.RESOLVE=\"_RESOLVE_\",e.TYPE=\"_TYPE_\",e.ROLL=\"_ROLL_\",e.PARENT=\"_PARENT_\",e.COLLECT=\"_COLLECT_\",e.BUBBING_HOOKS=\"_BUBBING_HOOKS_\",e.CAPTURING_HOOKS=\"_CAPTURING_HOOKS_\",e.SLICE_HOOKS=\"_SLICE_HOOKS_\",e.IGNORE_TESTS=\"_IGNORE_TESTS_\",e.RESOLVE_TYPE_SET=new Set([OPERATIONS.FINISH,OPERATIONS.END,OPERATIONS.END_ON_LEFT,OPERATIONS.UNWRAP,OPERATIONS.UNWRAP_ALL,OPERATIONS.WRAP,e.ROOT])}(MARKS||(MARKS={})),function(e){e[e.NODE=0]=\"NODE\",e[e.START=1]=\"START\",e[e.CURSOR=2]=\"CURSOR\",e[e.BACK_POINT=3]=\"BACK_POINT\",e[e.USE_FOLD=4]=\"USE_FOLD\"}(SCOPE||(SCOPE={}));class Scanner{constructor(e,t){this.useEscape=!1,this.useFold=!0,this.ignoreCase=!1,this.scanTree=build(e),t&&Object.assign(this,t)}scan(e){let t,n,o=\"string\"==typeof e?{tokens:[],input:e,begin:0,offset:0,end:e.length,line:1,column:1,useFold:this.useFold,useEscape:this.useEscape,ignoreCase:this.ignoreCase,hookPoint:0}:e,s=[],i=[[this.scanTree,O(),O(),0,!1]],r=0,c=!0;for(;;){let e;if(r||(n=O()),c)e=\"\",c=!1;else{if(o.offset>=o.end){if(i[0][SCOPE.CURSOR].offset<n.offset){if(u(\"\")||l())return o;if(o.offset<o.end)break;s.length=0,u(\"\")}if(s.length){const e=t;if(u(\"\",!0),e!==t&&l())return o}i[0][SCOPE.CURSOR].offset<n.offset&&R(i[0][SCOPE.CURSOR],n,null);break}switch(e=o.input[o.offset],o.offset+=1,e){case\"\\r\":if(\"\\n\"!==o.input[o.offset])break;e=\"\\n\",o.offset+=1;case\"\\n\":o.line+=1,o.column=0}if(o.column+=1,o.ignoreCase&&(e=e.toLowerCase()),o.useEscape)if(\"\\\\\"===e){if(r^=1,r)continue}else r&&(r=0,e=\"\\\\\"+e)}if(u(e))return o}return o;function O(){return{offset:o.offset,line:o.line,column:o.column}}function u(e,o){const r=s;let c,u,S;for(s=[];;){if(r.length)[c,u]=r.shift();else{if(t||c===i[0][SCOPE.NODE])break;c=i[0][SCOPE.NODE],u=null}S=!1,t=f(c,u)||c[MARKS.ROLL]&&f(c[MARKS.ROLL],u)||t}if(!o&&0===s.length&&l())return!0;function f(t,o){let r=t[e];if(r&&(o?S&&(o=o.slice()):o=[[n,t[MARKS.CAPTURING_HOOKS]]],S=!0,s.push([r,o]),r[MARKS.CAPTURING_HOOKS]&&o.push([O(),r[MARKS.CAPTURING_HOOKS]]),r[MARKS.RESOLVE]))return r=r[MARKS.RESOLVE],[r,O(),o,i.length]}}function l(){if(!t)return;const[e,{offset:n,line:s,column:r},O,u]=t;i.splice(0,i.length-u),o.offset=n,o.line=s,o.column=r;let l=S(e,O,!0);if(l>0)return!0;if(l<0)do{const e=i.shift();let t=o.tokens;e[SCOPE.USE_FOLD]?(o.tokens=t.shift()).pop():t.length=e[SCOPE.BACK_POINT]}while(++l<0);t=null,c=!0}function S(e,t,n){let s=e[MARKS.TYPE];const r=i[0],c=t[0][0];let u=o.tokens.length;if(n){let n,o=e[MARKS.SLICE_HOOKS];o&&(n=t[0][1],n&&(n=n.filter((e=>o.has(e))))),R(r[SCOPE.CURSOR],c,n)}if(s===MARKS.WRAP)return function(e,t,n){const{useFold:s,tokens:r}=o,c=r.length;let u=t[0][0];i.unshift([e,u,O(),c,s]),s&&(o.tokens=[r],o.hookPoint=1);let l=n?E(t,e[MARKS.SLICE_HOOKS]):0;return l>=0&&(l=f(e[MARKS.BUBBING_HOOKS],u,O()),l>=0)&&(e=e[MARKS.RESOLVE])?S(e,t,!1):l}(e,t,n);const l=o.tokens.length;if(n&&s!==MARKS.END_ON_LEFT){let n=E(t,e[MARKS.SLICE_HOOKS]);if(n<0)return o.tokens.length=u,n+1}if(o.hookPoint=l,s===MARKS.UNWRAP)return function(e,t){const n=i.shift();if(n[SCOPE.USE_FOLD]){let e=o.tokens.shift();o.hookPoint=e.length,e.push(o.tokens),o.tokens=e}let s=f(e[MARKS.BUBBING_HOOKS],n[SCOPE.START],O());if(s>=0){if(e=e[MARKS.RESOLVE],i[0][SCOPE.CURSOR]=O(),!e)return s;if(s=S(e,t,!1),s>=0)return s}if(i.unshift(n),n[SCOPE.USE_FOLD]){let e=o.tokens.pop();e.unshift(o.tokens),o.tokens=e}return s+1}(e,t);{let t=f(e[MARKS.BUBBING_HOOKS],c,O());return t<0?(o.tokens.length=u,t+1):s===MARKS.END_ON_LEFT?(o.offset=c.offset,o.line=c.line,o.column=c.column,r[SCOPE.CURSOR]=c,1):(r[SCOPE.CURSOR]=O(),s!==MARKS.END?t:1)}}function f(e,t,n){for(const s of e){let e=s.use(o,t,n);if(e<0)return e}return 0}function R(e,t,n){let s=0;if(e.offset<t.offset){let{tokens:i}=o;o.hookPoint=i.length,i.push(new Token(o.input.slice(e.offset,t.offset),e,t)),n&&(s=f(n,e,t))}return s}function E(e,t){let n=e[0][0];if(t)for(let o=1;o<e.length;o+=1){let[s,i]=e[o];if(i=i.filter((e=>t.has(e))),i.length){const e=R(n,s,i);if(e<0)return e;n=s}}return R(n,O(),null)}}}exports.Scanner=Scanner;class Token{constructor(e,t,n){this.value=e,this.loc={start:t,end:n}}trim(){const e=this.value.match(/^\\s*|\\s*$/gm);return this.slice(e[0].length,this.value.length-e[1].length)}concat(e){return new Token(this.value+e.value,this.loc.start,e.loc.end)}slice(e,t=this.value.length){let{value:n,loc:{start:o,end:s}}=this,{offset:i,line:r,column:c}=o,O=0;t<0&&(t=n.length+t),e<0&&(e=n.length+e),e>t&&(t=e);const u=[e,t].map((function(e){if(0===e)return o;if(e===n.length)return s;for(;O<e;)\"\\n\"===n[O]?(r+=1,c=1):c+=1,O+=1;return{offset:i+e,line:r,column:c}}));return new Token(n.slice(e,t),u[0],u[1])}toString(){return this.value}}exports.Token=Token;class RootStack extends Array{}function build(e){const t={[MARKS.TYPE]:MARKS.ROOT},[n,o,s]=buildRule([e],[t],[[new RootStack]],[[]],[t]);for(let e=0;e<n.length;e+=1){const t=n[e];MARKS.RESOLVE_TYPE_SET.has(t[MARKS.TYPE])||buildKey(MARKS.FINISH,[t],[o[e]],[s[e]])}return t}function buildRule(e,t,n,o,s){const i=[];let r,c=0;for(;c<e.length;){let l=0,S=c;const f=[];for(;;){if(e[c]===OPERATIONS.FORK_IN_ROOT)l&&(f.push(l),l=0),f.push(OPERATIONS.FORK_IN_ROOT);else{if(e[c]!==OPERATIONS.FORK_IN_PARENT)break;l+=1}c+=1}if(c===S){switch(r=e[c]){case OPERATIONS.NO_CAPTURE:case OPERATIONS.NO_COLLECT:i.push(r);case OPERATIONS.SPLIT:u(null);break;case OPERATIONS.OPTION:return O([i.concat(e.slice(c+1)),i.concat(e.slice(c+2))],(function(e){return buildRule(e,t,n.map((e=>e.slice())),o.map((e=>e.slice())),s)}));case OPERATIONS.MARK_AS_ROOT:return e=i.concat(e.slice(c+1)),O(t,(function(t,i){const r=n[i];return buildRule(e,[t],[[new RootStack(...r[0])].concat(r.slice(1))],[o[i]],[t].concat(s))}));default:if(r instanceof Hook)u(r);else for([t,n,o]=r instanceof Array?O(r,(function(e){return(e instanceof Array?buildRule:buildKey)(e,t,n.map((e=>e.slice())),o.map((e=>e.slice())),s)})):buildKey(r,t,n,o);i.length;)u(i.shift()===OPERATIONS.NO_COLLECT?OPERATIONS.pipe():new NoCapture)}c+=1}else{l&&f.push(l);for(let e of t){let t=e,n=0;for(let e of f)if(e===OPERATIONS.FORK_IN_ROOT)t=s[n++];else do{t=t[MARKS.PARENT],t===s[n]&&(n+=1)}while(--e>=0);e[MARKS.ROLL]!==t&&(e[MARKS.ROLL],e[MARKS.ROLL]=t)}}}return[t,n,o];function O(e,t){let n=[],o=[],s=[];for(let i=0;i<e.length;i+=1){const r=t(e[i],i);n=n.concat(r[0]),o=o.concat(r[1]),s=s.concat(r[2])}return[n,o,s]}function u(e){if(window.test,e)switch(e.mode){case 1:n.forEach((e=>e.push(r)));break;case 4:case 2:for(let e=0;e<t.length;e+=1)s(e)}else{e=new Call((function(){}),2);for(let e=0;e<t.length;e+=1)MARKS.RESOLVE_TYPE_SET.has(t[e][MARKS.TYPE])||s(e)}function s(n){const s=t[n],i=s[MARKS.TYPE];4!==e.mode&&MARKS.RESOLVE_TYPE_SET.has(i)?s[MARKS.BUBBING_HOOKS].push(e):((s[MARKS.CAPTURING_HOOKS]||(s[MARKS.CAPTURING_HOOKS]=[])).push(e),o[n].push(e))}}}function buildKey(e,t,n,o,s){if(\"string\"==typeof e){/^[\\s\\S]?$/.test(e)&&(e=[e]);for(let n=0;n<e.length;n+=1)t=t.map((function(t){return t[e[n]]||(t[e[n]]={[MARKS.PARENT]:t})}))}else MARKS.RESOLVE_TYPE_SET.has(e)&&(t=t.map((function(t,s){let r=n[s],c=o[s];if(o[s]=[],e===OPERATIONS.UNWRAP_ALL){if(e=OPERATIONS.UNWRAP,!(r[0]instanceof RootStack)){r.length>1&&(r[0]=r[0].concat(r.slice(1)));do{n[s]=[r[0][0]],r=r[0],t=i(t,e,r,c)}while(!(r[0]instanceof RootStack))}}else e===OPERATIONS.UNWRAP?(n[s]=[r[0][0]],r=r[0].concat(r.slice(1))):e===OPERATIONS.WRAP?(n[s]=[r],r=[]):n[s]=[r[0]],t=i(t,e,r,c);return t})));return[t,n,o];function i(e,t,n,o){return e[MARKS.RESOLVE],e[MARKS.RESOLVE]={[MARKS.PARENT]:e,[MARKS.TYPE]:t,[MARKS.SLICE_HOOKS]:o.length?new Set(o.splice(0)):null,[MARKS.BUBBING_HOOKS]:n.slice(1).reverse()}}}function unwrapTokens(e){return e instanceof Token?e.value:e instanceof Array?e.map(unwrapTokens):e}exports.unwrapTokens=unwrapTokens})();var __webpack_export_target__=exports;for(var i in __webpack_exports__)__webpack_export_target__[i]=__webpack_exports__[i];__webpack_exports__.__esModule&&Object.defineProperty(__webpack_export_target__,\"__esModule\",{value:!0})})();\n//# sourceMappingURL=scanner.js.map","import {\r\n    Scanner, OPERATIONS, HOOK_MODE, IScanEnv,\r\n    IPattern, Token,\r\n    IPosition, ISourceLocation,\r\n} from \"astry\"\r\n\r\n\r\nconst {\r\n    FINISH,\r\n    WRAP, UNWRAP, UNWRAP_ALL,\r\n    OPTION,\r\n    SPLIT,\r\n    NO_COLLECT, NO_CAPTURE,\r\n    MARK_AS_ROOT, FORK_IN_PARENT, FORK_IN_ROOT,\r\n    END, END_ON_LEFT,\r\n    useKey,\r\n    node, key, pick, hook, pipe, prev, merge,\r\n\r\n    MATCH_BEGIN,\r\n    MATCH_END,\r\n    MATCH_EOF,\r\n    MERGE_ALL_TOKENS,\r\n    UNFOLD\r\n} = OPERATIONS;\r\n\r\n\r\n\r\n\r\nconst MATCH_WHITE_SPACE_CHARACHER: IPattern = [` `, `\\n`, `\\t`];\r\nconst CLEAR_COMMENT: IPattern = [\r\n    [\r\n        NO_COLLECT,\r\n        [\r\n            [\"//\", WRAP, [\"\\n\", [MATCH_EOF]], UNWRAP],\r\n            [\"/*\", WRAP, [\"*/\", [MATCH_EOF]], UNWRAP],\r\n        ],\r\n    ]\r\n]\r\n\r\nconst CLEAR_WHITE_SPACE_CHARACHER: IPattern = [\r\n    [NO_COLLECT, MATCH_WHITE_SPACE_CHARACHER]\r\n];\r\n\r\nconst THROW_TOKEN_ERROR = hook(function (env, start, end) {\r\n    console.log(\"Invalid or unexpected token\", start, end);\r\n}, HOOK_MODE.RESOLVE);\r\n\r\nconst MATCH_STRING: IPattern = [\r\n    [\r\n        `\"`, WRAP,\r\n        [\r\n            [THROW_TOKEN_ERROR, `\\n`],\r\n            [`\\\\`, [`\\\\`, `\\n`, `\"`]],\r\n            [`\"`, UNWRAP]\r\n        ]\r\n\r\n    ],\r\n    [\r\n        `'`, WRAP,\r\n        [\r\n            [THROW_TOKEN_ERROR, `\\n`],\r\n            [`\\\\`, [`\\\\`, `\\n`, `'`]],\r\n            [`'`, UNWRAP]\r\n        ]\r\n    ],\r\n]\r\n\r\n// 不包含 '' \"\" 的 url 地址可能会包含断义字符 / 影响判别，这里通过单独匹配给出结果\r\nconst MATCH_URL: IPattern = [\r\n    [\r\n        MATCH_BEGIN, \"url(\", WRAP,\r\n        [\r\n            [MATCH_STRING],\r\n            [CLEAR_WHITE_SPACE_CHARACHER],\r\n            [\")\", UNWRAP]\r\n        ],\r\n    ]\r\n];\r\n\r\nexport default new Scanner([\r\n    [\r\n        MARK_AS_ROOT,\r\n        [\r\n            [MATCH_STRING],\r\n            [MATCH_URL],\r\n            [\r\n                // 使能在 ( 后被断句\r\n                // 这里没做额外检验允许括号前的空格\r\n                MERGE_ALL_TOKENS,\r\n                prev(null, true), \"(\"\r\n            ],\r\n            \")\",\r\n            [CLEAR_WHITE_SPACE_CHARACHER],\r\n            [CLEAR_COMMENT],\r\n            [\r\n                MERGE_ALL_TOKENS,\r\n                prev(null, true),\r\n                \"%\"\r\n            ],\r\n            \"/\",\r\n            \",\"\r\n        ]\r\n    ]\r\n])","/**\r\n * 构建基础数据类型匹配器\r\n * 缓存部分使用频繁的匹配器，使之不必要每次引用都需编译\r\n */\r\n\r\nimport {\r\n    getRange,\r\n    walker,\r\n    MatchEnv,\r\n    IPattern,\r\n    IFound,\r\n    IMatchFunc,\r\n    IWalker\r\n} from '../utils'\r\nimport {\r\n    IAnalyzer,\r\n    buildAnalyzer, buildPattern\r\n} from '../parser'\r\n\r\n// @ts-ignore\r\nimport * as VDS_SYNTAXES from './syntaxes.json'\r\n\r\n\r\nexport {\r\n    getCachePattern,\r\n    setSharingSyntax,\r\n    getSharingAnalyzer\r\n}\r\n\r\n\r\n\r\nconst syntaxesContext = (<any>require).context('./sharing', false, /\\.ts$/);\r\nconst SHARING_SYNTAXES: Array<[string, string]> = [];\r\n\r\nconst SHARING_DATA_TYPES_ANALYZER_MAP: Record<string, IAnalyzer> = {};\r\n\r\n\r\nfor (const path of syntaxesContext.keys()) {\r\n    SHARING_SYNTAXES.push([\r\n        path.slice(2, -3),\r\n        syntaxesContext(path).default\r\n    ]);\r\n}\r\n\r\n\r\nconst COLOR_VALUE_MAP: Record<string, number> = {\r\n    aliceblue: 0xF0F8FF, antiquewhite: 0xFAEBD7, aqua: 0x00FFFF, aquamarine: 0x7FFFD4, azure: 0xF0FFFF, beige: 0xF5F5DC, bisque: 0xFFE4C4, black: 0x000000, blanchedalmond: 0xFFEBCD, blue: 0x0000FF, blueviolet: 0x8A2BE2, brown: 0xA52A2A, burlywood: 0xDEB887, cadetblue: 0x5F9EA0, chartreuse: 0x7FFF00, chocolate: 0xD2691E, coral: 0xFF7F50, cornflowerblue: 0x6495ED, cornsilk: 0xFFF8DC, crimson: 0xDC143C, cyan: 0x00FFFF, darkblue: 0x00008B, darkcyan: 0x008B8B, darkgoldenrod: 0xB8860B, darkgray: 0xA9A9A9, darkgreen: 0x006400, darkgrey: 0xA9A9A9, darkkhaki: 0xBDB76B, darkmagenta: 0x8B008B, darkolivegreen: 0x556B2F, darkorange: 0xFF8C00, darkorchid: 0x9932CC, darkred: 0x8B0000, darksalmon: 0xE9967A, darkseagreen: 0x8FBC8F, darkslateblue: 0x483D8B, darkslategray: 0x2F4F4F, darkslategrey: 0x2F4F4F, darkturquoise: 0x00CED1, darkviolet: 0x9400D3, deeppink: 0xFF1493, deepskyblue: 0x00BFFF, dimgray: 0x696969, dimgrey: 0x696969, dodgerblue: 0x1E90FF, firebrick: 0xB22222, floralwhite: 0xFFFAF0, forestgreen: 0x228B22, fuchsia: 0xFF00FF, gainsboro: 0xDCDCDC, ghostwhite: 0xF8F8FF, gold: 0xFFD700, goldenrod: 0xDAA520, gray: 0x808080, green: 0x008000, greenyellow: 0xADFF2F, grey: 0x808080, honeydew: 0xF0FFF0, hotpink: 0xFF69B4, indianred: 0xCD5C5C, indigo: 0x4B0082, ivory: 0xFFFFF0, khaki: 0xF0E68C, lavender: 0xE6E6FA, lavenderblush: 0xFFF0F5, lawngreen: 0x7CFC00, lemonchiffon: 0xFFFACD, lightblue: 0xADD8E6, lightcoral: 0xF08080, lightcyan: 0xE0FFFF, lightgoldenrodyellow: 0xFAFAD2, lightgray: 0xD3D3D3, lightgreen: 0x90EE90, lightgrey: 0xD3D3D3, lightpink: 0xFFB6C1, lightsalmon: 0xFFA07A, lightseagreen: 0x20B2AA, lightskyblue: 0x87CEFA, lightslategray: 0x778899, lightslategrey: 0x778899, lightsteelblue: 0xB0C4DE, lightyellow: 0xFFFFE0, lime: 0x00FF00, limegreen: 0x32CD32, linen: 0xFAF0E6, magenta: 0xFF00FF, maroon: 0x800000, mediumaquamarine: 0x66CDAA, mediumblue: 0x0000CD, mediumorchid: 0xBA55D3, mediumpurple: 0x9370DB, mediumseagreen: 0x3CB371, mediumslateblue: 0x7B68EE, mediumspringgreen: 0x00FA9A, mediumturquoise: 0x48D1CC, mediumvioletred: 0xC71585, midnightblue: 0x191970, mintcream: 0xF5FFFA, mistyrose: 0xFFE4E1, moccasin: 0xFFE4B5, navajowhite: 0xFFDEAD, navy: 0x000080, oldlace: 0xFDF5E6, olive: 0x808000, olivedrab: 0x6B8E23, orange: 0xFFA500, orangered: 0xFF4500, orchid: 0xDA70D6, palegoldenrod: 0xEEE8AA, palegreen: 0x98FB98, paleturquoise: 0xAFEEEE, palevioletred: 0xDB7093, papayawhip: 0xFFEFD5, peachpuff: 0xFFDAB9, peru: 0xCD853F, pink: 0xFFC0CB, plum: 0xDDA0DD, powderblue: 0xB0E0E6, purple: 0x800080, red: 0xFF0000, rosybrown: 0xBC8F8F, royalblue: 0x4169E1, saddlebrown: 0x8B4513, salmon: 0xFA8072, sandybrown: 0xF4A460, seagreen: 0x2E8B57, seashell: 0xFFF5EE, sienna: 0xA0522D, silver: 0xC0C0C0, skyblue: 0x87CEEB, slateblue: 0x6A5ACD, slategray: 0x708090, slategrey: 0x708090, snow: 0xFFFAFA, springgreen: 0x00FF7F, steelblue: 0x4682B4, tan: 0xD2B48C, teal: 0x008080, thistle: 0xD8BFD8, tomato: 0xFF6347, turquoise: 0x40E0D0, violet: 0xEE82EE, wheat: 0xF5DEB3, white: 0xFFFFFF, whitesmoke: 0xF5F5F5, yellow: 0xFFFF00, yellowgreen: 0x9ACD32\r\n};\r\nconst LENGTH_UNITS = [\r\n    \"em\", \"ex\", \"ch\", \"rem\", \"vw\", \"vh\", \"vmin\", \"vmax\",  // Relative Lengths\r\n    \"cm\", \"mm\", \"Q\", \"in\", \"pt\", \"pc\", \"px\", // Absolute Lengths\r\n    \"cap\", \"ic\", \"lh\", \"rlh\", \"vi\", \"vb\"\r\n];\r\nconst PERCENTAGE_UNITS = [\"%\"];\r\nconst ANGLE_UNITS = [\"deg\", \"grad\", \"rad\", \"turn\"];\r\nconst TIME_UNITS = [\"s\", \"ms\"];\r\nconst FLEX_UNITS = [\"fr\"];\r\nconst FREQUENCY_UNITS = [\"Hz\", \"KhZ\"];\r\nconst RESOLUTION_UNITS = [\"dpi\", \"dpcm\", \"dppx\", \"x\"];\r\n\r\nconst DIMENSION_UNITS = LENGTH_UNITS.concat(\r\n    PERCENTAGE_UNITS,\r\n    ANGLE_UNITS,\r\n    TIME_UNITS,\r\n    FLEX_UNITS,\r\n    FREQUENCY_UNITS.map(unit => unit.toLowerCase()),\r\n    RESOLUTION_UNITS\r\n);\r\n\r\nconst DATA_TYPES_PATTERN_MAP: Record<string, IPattern> = {\r\n    \"an-plus-b\": wrapPattern(),\r\n    \"angle\": valuesPattern(ANGLE_UNITS),\r\n    \"custom-ident\": pickStringPattern(function (name) {\r\n        if (/^(_|\\\\|[a-zA-Z])(\\w|-|\\\\)*/.test(name)) {   // 非标准\r\n            return name;\r\n        }\r\n    }),\r\n    //  https://developer.mozilla.org/docs/Web/CSS/dimension\r\n    \"dimension\": valuesPattern(DIMENSION_UNITS, false, true),\r\n    \"flex\": valuesPattern(FLEX_UNITS),\r\n    \"frequency\": valuesPattern(FREQUENCY_UNITS),\r\n    \"ident\": wrapPattern(),\r\n    \"integer\": pickStringPattern(function (value, range: [number, number]) {\r\n        const num = Number(value);\r\n        if (num % 1 === 0 && checkRange(num, range)) {\r\n            return num;\r\n        }\r\n    }),\r\n    \"length\": valuesPattern(LENGTH_UNITS, true),\r\n    \"number\": pickStringPattern(function (value, range: [number, number]) {\r\n        const num = Number(value);\r\n        if (num === num && checkRange(num, range)) {\r\n            return num;\r\n        }\r\n    }),\r\n    \"percentage\": valuesPattern(PERCENTAGE_UNITS, true),\r\n    \"ratio\": lazyInitPattern(\"ratio\", `<number [0,+∞]> / <number [0,+∞]>`),\r\n    \"resolution\": valuesPattern(RESOLUTION_UNITS),\r\n    \"string\": pickArrayPattern(function (tokens: Array<string>) {\r\n        const hack = tokens[0];\r\n        if (hack === `\"` || hack === `'`) {\r\n            return tokens[1] || \"\";\r\n        }\r\n    }),\r\n    \"time\": valuesPattern(TIME_UNITS),\r\n    //https://developer.mozilla.org/docs/Web/CSS/timing-function\r\n    \"timing-function\": lazyInitPattern(\r\n        \"timing-function\",\r\n        `ease | ease-in | ease-out | ease-in-out | <easing-function>`\r\n    ),\r\n    \"url\": pickArrayPattern(function (tokens: Array<string>) {\r\n        const hack = tokens[0];\r\n        if (hack === \"url(\") {\r\n            return tokens.slice(1, -1);\r\n        }\r\n    }),\r\n\r\n    \"zero\": pickStringPattern(function (token) {\r\n        if (token === \"0\") {\r\n            return token;\r\n        }\r\n    }),\r\n    \"hex-color\": pickStringPattern(function (token) {\r\n        // https://drafts.csswg.org/css-color-4/#typedef-hex-color\r\n        if (token[0] === \"#\") {\r\n            let value = token.slice(1);\r\n\r\n            switch (value.length) {\r\n                case 3:\r\n                    value += \"f\";\r\n                case 4:\r\n                    value = value.replace(/(\\S)/g, \"$1$1\");\r\n                    break;\r\n                case 6:\r\n                    value += \"ff\"\r\n                case 8:\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            const color = parseInt(value.slice(0, -2), 16);\r\n            const opacity = parseInt(value.slice(-2), 16);\r\n            if (color === color && opacity === opacity) {\r\n                return [color, opacity];\r\n            }\r\n        }\r\n    }),\r\n    \"named-color\": pickStringPattern(function (name) {\r\n        return COLOR_VALUE_MAP[name];\r\n    }),\r\n    \"hash-token\": wrapPattern(),\r\n    \"declaration-value\": wrapPattern(),\r\n    \"lab()\": wrapPattern(),\r\n    \"lch()\": wrapPattern(),\r\n    \"attr-name\": pickStringPattern(function (name) {\r\n        return name;\r\n    }),\r\n    \"type-or-unit\": wrapPattern(),\r\n    \"attr-fallback\": wrapPattern(),\r\n}\r\n\r\nfor (const [name, syntax] of SHARING_SYNTAXES) {\r\n\r\n    /* IFDEBUG */\r\n    if (DATA_TYPES_PATTERN_MAP[name]) {\r\n        debugger;\r\n    }\r\n    /* FIDEBUG */\r\n\r\n    setSharingSyntax(name, syntax);\r\n}\r\nfunction getSharingAnalyzer(name: string) {\r\n    return SHARING_DATA_TYPES_ANALYZER_MAP[name];\r\n}\r\nfunction setSharingSyntax(name: string, syntax: string) {\r\n    let pattern: IPattern;\r\n    function getPattern() {\r\n        if (!pattern) {\r\n            pattern = buildPattern(syntax);\r\n        }\r\n        return pattern;\r\n    }\r\n\r\n    DATA_TYPES_PATTERN_MAP[name] = wrapPattern(function (next) {\r\n        const pattern = DATA_TYPES_PATTERN_MAP[name] = getPattern();\r\n\r\n        return pattern.walker(next);\r\n    });\r\n\r\n    let analyzer: IAnalyzer;\r\n    return SHARING_DATA_TYPES_ANALYZER_MAP[name] = function (env) {\r\n        if (!analyzer) {\r\n            analyzer = buildAnalyzer(getPattern());\r\n            SHARING_DATA_TYPES_ANALYZER_MAP[name] = analyzer;\r\n        }\r\n        return analyzer(env);\r\n    }\r\n}\r\n\r\nfunction wrapPattern(walker: IWalker = function () { return function () { } }): IPattern {\r\n    return { walker };\r\n}\r\n\r\nfunction checkRange(value: number, range: [number, number]) {\r\n    return !range || range[0] <= value && range[1] >= value;\r\n}\r\n\r\nfunction getCachePattern(name: string) {\r\n    return DATA_TYPES_PATTERN_MAP[name]\r\n        || (DATA_TYPES_PATTERN_MAP[name] = lazyInitPattern(name));\r\n}\r\n\r\nfunction valuesPattern(units: Array<string>, optionalUnit?: boolean, ignoreCase?: boolean) {\r\n    const unitSet = new Set(units);\r\n    return pickStringPattern(\r\n        function (value) {\r\n            const res = getValue(value, unitSet, optionalUnit, ignoreCase);\r\n            if (res) {\r\n                return res;\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nfunction lazyInitPattern(\r\n    name: string,\r\n    syntax?: string\r\n): IPattern {\r\n\r\n    if (syntax === undefined) {\r\n        if (VDS_SYNTAXES[name]) {\r\n            syntax = VDS_SYNTAXES[name].syntax;\r\n        }\r\n        /* IFDEBUG */\r\n        else {\r\n            debugger;\r\n        }\r\n        /* FIDEBUG */\r\n    }\r\n    let pattern: IPattern;\r\n\r\n    return {\r\n        walker(next) {\r\n            return (\r\n                pattern || (pattern = buildPattern(syntax))\r\n            ).walker(next);\r\n        }\r\n    };\r\n\r\n}\r\n\r\n\r\nfunction pickArrayPattern(match: (token: Array<any>, arg?: any) => any) {\r\n    return wrapPattern(\r\n        walker(function (env, isFinal, arg) {\r\n            const value = env.token;\r\n            if (value instanceof Array) {\r\n                const found = match(value, arg);\r\n                if (found !== undefined && env.isSuccess(isFinal, 1)) {\r\n                    env.found.push([found, join(value), env.next()]);\r\n                    return true;\r\n                }\r\n            }\r\n        })\r\n    )\r\n    function join(list: Array<any>) {\r\n        let text = \"\";\r\n        for (let item of list) {\r\n            text += item instanceof Array ? join(item) : item;\r\n        }\r\n        return text;\r\n    }\r\n}\r\nfunction pickStringPattern(match: (token: string, arg?: any) => any) {\r\n    return wrapPattern(\r\n        walker(function (env, isFinal, arg) {\r\n            const value = env.token;\r\n            if (typeof value === \"string\") {\r\n                const found = match(value, arg);\r\n                if (found !== undefined && env.isSuccess(isFinal, 1)) {\r\n                    env.found.push([found, value, env.next()]);\r\n                    return true;\r\n                }\r\n            }\r\n        })\r\n    )\r\n}\r\n\r\n\r\nfunction getValue(\r\n    text: string,\r\n    unitSet: Set<string>,\r\n    optionalUnit?: boolean,\r\n    ignoreCase?: boolean\r\n) {\r\n\r\n    let value: number, unit: string;\r\n    let found = text.match(/^(\\+|-)?\\d*(\\.\\d+)?/)[0];\r\n    if (\r\n        found\r\n        && !isNaN(value = parseFloat(found))\r\n    ) {\r\n        if (!optionalUnit || value !== 0 || found.length !== text.length) {\r\n            unit = text.slice(found.length);\r\n            ignoreCase && (unit = unit.toLowerCase());\r\n            if (!unitSet.has(unit)) {\r\n                return;\r\n            }\r\n        }\r\n        return [value, unit];\r\n    }\r\n}","\r\nexport default\r\n    `<color>\r\nwhere \r\n<color> = <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>\r\n\r\nwhere \r\n<rgb()> = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )\r\n<rgba()> = rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )\r\n<hsl()> = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hsla()> = hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hwb()> = hwb( [<hue> | none] [<percentage> | none] [<percentage> | none] [ / [<alpha-value> | none] ]? )\r\n\r\nwhere \r\n<alpha-value> = <number> | <percentage>\r\n<hue> = <number> | <angle>\r\n`;","\r\nexport default\r\n    `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?\r\nwhere \r\n<length-percentage> = <length> | <percentage>`","export default\r\n    `content | <'width'>`","export default\r\n    `<number>`","export default\r\n    `<number>`","export default\r\n    `[ <family-name> | <generic-family> ]#\r\nwhere \r\n<family-name> = <string> | <custom-ident>+\r\n<generic-family> = serif | sans-serif | cursive | fantasy | monospace`","export default\r\n    `<absolute-size> | <relative-size> | <length-percentage>\r\nwhere \r\n<absolute-size> = xx-small | x-small | small | medium | large | x-large | xx-large | xxx-large\r\n<relative-size> = larger | smaller\r\n<length-percentage> = <length> | <percentage>`","export default\r\n    `<font-stretch-absolute>\r\nwhere \r\n<font-stretch-absolute> = normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | <percentage>`\r\n\r\n","export default\r\n    `normal | italic | oblique <angle>?`","export default\r\n    `<font-weight-absolute> | bolder | lighter\r\nwhere \r\n<font-weight-absolute> = normal | bold | <number [1,1000]>`","export default\r\n    `<track-size>+\r\nwhere \r\n<track-size> = <track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( [ <length> | <percentage> ] )\r\n\r\nwhere \r\n<track-breadth> = <length-percentage> | <flex> | min-content | max-content | auto\r\n<inflexible-breadth> = <length> | <percentage> | min-content | max-content | auto\r\n\r\nwhere \r\n<length-percentage> = <length> | <percentage>`","export default\r\n    `<track-size>+\r\nwhere \r\n<track-size> = <track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( [ <length> | <percentage> ] )\r\n\r\nwhere \r\n<track-breadth> = <length-percentage> | <flex> | min-content | max-content | auto\r\n<inflexible-breadth> = <length> | <percentage> | min-content | max-content | auto\r\n\r\nwhere \r\n<length-percentage> = <length> | <percentage>`","export default\r\n    `none | <track-list> | <auto-track-list> | subgrid <line-name-list>?\r\nwhere \r\n<track-list> = [ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?\r\n<auto-track-list> = [ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat>\r\n[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?\r\n<line-name-list> = [ <line-names> | <name-repeat> ]+\r\n\r\nwhere \r\n<line-names> = '[' <custom-ident>* ']'\r\n<track-size> = <track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( [ <length> | <percentage> ] )\r\n<track-repeat> = repeat( [ <integer [1,∞]> ] , [ <line-names>? <track-size> ]+ <line-names>? )\r\n<fixed-size> = <fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )\r\n<fixed-repeat> = repeat( [ <integer [1,∞]> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )\r\n<auto-repeat> = repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )\r\n<name-repeat> = repeat( [ <integer [1,∞]> ] | auto-fill ], <line-names>+ )\r\n\r\nwhere \r\n<track-breadth> = <length-percentage> | <flex> | min-content | max-content | auto\r\n<inflexible-breadth> = <length> | <percentage> | min-content | max-content | auto\r\n<fixed-breadth> = <length-percentage>\r\n\r\nwhere \r\n<length-percentage> = <length> | <percentage>`","export default\r\n    `none | <track-list> | <auto-track-list> | subgrid <line-name-list>?\r\nwhere \r\n<track-list> = [ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?\r\n<auto-track-list> = [ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat>\r\n[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?\r\n<line-name-list> = [ <line-names> | <name-repeat> ]+\r\n\r\nwhere \r\n<line-names> = '[' <custom-ident>* ']'\r\n<track-size> = <track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( [ <length> | <percentage> ] )\r\n<track-repeat> = repeat( [ <integer [1,∞]> ] , [ <line-names>? <track-size> ]+ <line-names>? )\r\n<fixed-size> = <fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )\r\n<fixed-repeat> = repeat( [ <integer [1,∞]> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )\r\n<auto-repeat> = repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )\r\n<name-repeat> = repeat( [ <integer [1,∞]> ] | auto-fill ], <line-names>+ )\r\n\r\nwhere \r\n<track-breadth> = <length-percentage> | <flex> | min-content | max-content | auto\r\n<inflexible-breadth> = <length> | <percentage> | min-content | max-content | auto\r\n<fixed-breadth> = <length-percentage>\r\n\r\nwhere \r\n<length-percentage> = <length> | <percentage>`","export default\r\n    `none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?\r\nwhere \r\n<line-names> = '[' <custom-ident>* ']'\r\n<track-size> = <track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( [ <length> | <percentage> ] )\r\n<explicit-track-list> = [ <line-names>? <track-size> ]+ <line-names>?\r\n\r\nwhere \r\n<track-breadth> = <length-percentage> | <flex> | min-content | max-content | auto\r\n<inflexible-breadth> = <length> | <percentage> | min-content | max-content | auto\r\n\r\nwhere \r\n<length-percentage> = <length> | <percentage>`","export default\r\n    `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\r\nwhere \r\n<length-percentage> = <length> | <percentage>`","export default\r\n    `normal | <number> | <length> | <percentage>`","export default\r\n    `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)\r\nwhere \r\n<length-percentage> = <length> | <percentage>`","\r\nimport { Token, IPosition, unwrapTokens } from \"astry\"\r\n\r\n\r\nimport vdsTokenizer from './vds-tokenizer'\r\nimport cavTokenizer from './cav-tokenizer'\r\nimport { getCachePattern } from './data-types'\r\nimport {\r\n    getRange,\r\n    walker,\r\n    MatchEnv,\r\n    IPattern,\r\n    IFound,\r\n    IMatchFunc,\r\n    IWalker\r\n} from './utils'\r\n\r\nexport {\r\n    MatchEnv,\r\n    Pattern,\r\n    buildAnalyzer, buildPattern,\r\n    DATA_TYPES_MARK,\r\n    IAnalyzer,\r\n    IPattern,\r\n    IFound,\r\n    IMatchFunc,\r\n    IWalker\r\n}\r\nexport default buildAnalyzer;\r\n\r\n\r\n\r\n\r\n\r\nconst DATA_TYPES_MARK = Symbol(\"DATA_TYPES_MARK\");\r\n\r\ntype ITokens = Array<any>;\r\ntype IAnalyzer = (env: string | ITokens | MatchEnv) => MatchEnv;\r\n\r\n\r\nconst UNARY_OPERATOR_SET = new Set([\"{}\", \"*\", \"+\", \"?\", \"#\", \"!\"]);\r\nconst BINARY_OPERATOR_LIST = [\"=\", \"|\", \"||\", \"&&\", \"\"/*, \"[]\"*/];  // 包含顺序信息（结合优先级）的列表\r\nconst SPECIFIC_CASE_SET = new Set([\"inherit\", \"initial\", \"unset\"]);\r\n\r\n\r\nconst POLYFILL_WALK_FUNC: IMatchFunc = function (env, isFinal) {\r\n    return env.isSuccess(isFinal, 0);\r\n}\r\n\r\n\r\n\r\n\r\nfunction buildAnalyzer(syntax: string | IPattern): IAnalyzer {\r\n\r\n    const pattern = typeof syntax === \"string\"\r\n        ? buildPattern(syntax)\r\n        : syntax;\r\n\r\n    const match = pattern.walker(null);\r\n\r\n    return function (input: string | ITokens) {\r\n\r\n        const env = new MatchEnv(\r\n            typeof input === \"string\" ?\r\n                unwrapTokens(cavTokenizer.scan(input).tokens)\r\n                : input,\r\n            pattern\r\n        );\r\n\r\n        if (env.tokens.length === 1 && SPECIFIC_CASE_SET.has(env.token)) {\r\n            env.found = [\r\n                [DATA_TYPES_MARK, \"specific-case\", 1],\r\n                [env.token, env.token, env.next()]\r\n            ];\r\n            env.success = true;\r\n            return env;\r\n        }\r\n        env.success = !!match(env, true) && !env.token;\r\n        return env;\r\n    }\r\n}\r\n\r\nfunction buildPattern(syntax: string): Pattern {\r\n    const tokens = vdsTokenizer.scan(syntax).tokens;\r\n    const map: Map<string, Pattern> = new Map();\r\n\r\n\r\n    for (let i = tokens.length - 1; i >= 0; i -= 1) {\r\n        parseStatement(tokens[i], map);\r\n    }\r\n    return map.get(\"\");\r\n}\r\n\r\nfunction parseStatement(\r\n    statement: Array<any>,\r\n    map: Map<string, IPattern>\r\n): IPattern {\r\n    if (\r\n        statement.length === 1\r\n        && statement[0] instanceof Token\r\n    ) {\r\n        return;\r\n    }\r\n    let pattern = parsePattern(statement, map);\r\n\r\n    if (!(pattern instanceof EqualSign)) {\r\n        const id = \"\";\r\n        if (map.has(id)) {\r\n            pattern = new SingleBar(\r\n                new ExclamationPoint(map.get(id))\r\n            ).add(pattern);\r\n        }\r\n        map.set(id, pattern);\r\n    }\r\n\r\n    return pattern;\r\n}\r\n\r\nfunction getQuotesLiteral(tokens: any): [string, IPosition, IPosition] {\r\n    if (tokens instanceof Array) {\r\n        const hack: Token = tokens[0];\r\n        \r\n        const hackEnd: Token = tokens[tokens.length - 1];\r\n        return [\r\n            tokens.slice(1, -1).join(\"\"),\r\n            hack.loc.start,\r\n            hackEnd.loc.end\r\n        ]\r\n    }\r\n}\r\n\r\nfunction parsePattern(\r\n    tokens: Array<any>,\r\n    patternMap: Map<string, IPattern>\r\n): IPattern {\r\n    const units: [IPattern?, ...any] = [];\r\n    let pattern: IPattern\r\n    for (let index = 0, length = tokens.length; index < length; index += 1) {\r\n        let token = tokens[index];\r\n\r\n        let adhesive = getQuotesLiteral(token);\r\n\r\n        if (adhesive) {\r\n            // https://drafts.csswg.org/css-values-3/#component-types\r\n            // 处理可能出现的不作为特殊标记使用的 '+' '*' 'xxx' 等情况\r\n            let isAdjacent = 1;\r\n            while (true) {\r\n                let [value, start, end] = adhesive;\r\n                if (pattern instanceof Value && pattern.end.offset === start.offset) {\r\n                    pattern.data += value;\r\n                    pattern.end = end;\r\n                } else {\r\n                    if (pattern) {\r\n                        units.push(\r\n                            pattern,\r\n                            [\"\", BINARY_OPERATOR_LIST.indexOf(\"\")]\r\n                        );\r\n                    }\r\n                    pattern = new Value(new Token(value, start, end));\r\n                }\r\n\r\n                if (isAdjacent-- && index + 1 < length) {\r\n                    token = tokens[index + 1]\r\n                    adhesive = getQuotesLiteral(token);\r\n                    if (adhesive) {\r\n                        isAdjacent = 1;\r\n                    } else if (\r\n                        token instanceof Token\r\n                        && token.loc.start.offset === end.offset\r\n                        && !isUnaryOperator(token.value)\r\n                        && !isBinaryOperator(token.value)\r\n                    ) {\r\n                        adhesive = [token.value, token.loc.start, token.loc.end];\r\n                    } else {\r\n                        break;\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n                index += 1;\r\n            }\r\n\r\n        } else if (!pattern) {\r\n            pattern = parseUnitPattern(token, patternMap);\r\n        } else {\r\n            let op = token.value;\r\n            if (isUnaryOperator(op)) {\r\n                pattern = parseUnaryPattern(pattern, op, token.content);\r\n            } else {\r\n                if (!isBinaryOperator(op)) {\r\n                    op = \"\";\r\n                    index -= 1;\r\n                }\r\n                units.push(pattern, [op, BINARY_OPERATOR_LIST.indexOf(op)]);\r\n                pattern = null;\r\n            }\r\n        }\r\n    }\r\n    pattern && units.push(pattern);\r\n\r\n    while (units.length > 1) {\r\n        let index = units.length - 2, maxp: number = -1, maxi = index;\r\n        do {\r\n            let precedence: number = units[index][1]\r\n            if (precedence >= maxp) {\r\n                maxp = precedence;\r\n                maxi = index;\r\n            }\r\n            index -= 2;\r\n        } while (index > 0)\r\n\r\n        do {\r\n            units.splice(\r\n                maxi - 1, 3,\r\n                parseBinaryPattern(\r\n                    <Pattern>units[maxi - 1],\r\n                    units[maxi][0],\r\n                    <Pattern>units[maxi + 1],\r\n                    patternMap\r\n                )\r\n            );\r\n            //maxi -= 2;\r\n        } while (maxi < units.length - 1 && units[maxi][1] === maxp)\r\n    }\r\n    return units[0];\r\n}\r\n\r\nfunction isUnaryOperator(op: string) {\r\n    return UNARY_OPERATOR_SET.has(op);\r\n}\r\nfunction isBinaryOperator(op: string) {\r\n    return BINARY_OPERATOR_LIST.includes(op);\r\n}\r\n\r\n\r\nabstract class Pattern implements IPattern {\r\n    match(env: MatchEnv, isFinal: boolean, arg: any) {\r\n        return false;\r\n    }\r\n    walker(next: IMatchFunc): IMatchFunc {\r\n        return walker(this.match.bind(this))(next);\r\n    }\r\n}\r\n\r\n\r\n\r\nclass BinaryPattern extends Pattern {\r\n    units: Array<IPattern>;\r\n    constructor(pattern: IPattern) {\r\n        super();\r\n        this.units = [pattern];\r\n    }\r\n    add(pattern: IPattern) {\r\n        this.units.push(pattern);\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\nclass Separate extends BinaryPattern {\r\n    // https://drafts.csswg.org/css-values-3/#component-types\r\n    units: [IPattern, Value, IPattern];\r\n    walker(next: IMatchFunc): IMatchFunc {\r\n\r\n        const [left, separator, right] = this.units;\r\n\r\n        let pattern: Juxtaposition;\r\n        if (left) {\r\n            pattern = new Juxtaposition(new ExclamationPoint(left));\r\n            pattern.add(separator);\r\n        }\r\n\r\n        if (right) {\r\n            pattern = new Juxtaposition(pattern ? new QuestionMark(pattern) : separator);\r\n            pattern.add(new ExclamationPoint(right));\r\n        }\r\n\r\n        return new QuestionMark(pattern).walker(next);\r\n\r\n    }\r\n}\r\n\r\nclass Juxtaposition extends BinaryPattern {\r\n    // https://drafts.csswg.org/css-values-3/#component-types\r\n\r\n    add(pattern: IPattern) {\r\n        const units = this.units;\r\n        const prev = units[units.length - 1];\r\n\r\n\r\n        if (pattern instanceof Value && pattern.data === \",\") {\r\n            switch (true) {\r\n                case prev instanceof QuestionMark:\r\n                case prev instanceof Separate && prev.units.length >= 3:\r\n                    /*case prev instanceof CurlyBraces:\r\n                    case prev instanceof Asterisk:*/\r\n                    pattern = new Separate(pattern);\r\n                    (<Separate>pattern).units.unshift(units.pop());\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (true) {\r\n                case pattern instanceof QuestionMark:\r\n                    if (prev instanceof Value && prev.data === \",\") {\r\n                        pattern = new Separate(pattern);\r\n                        (<Separate>pattern).units.unshift(null, units.pop());\r\n                    } else if (prev instanceof Separate && prev.units.length <= 3) {\r\n                        prev.add(pattern);\r\n                        pattern = units.pop();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        units.push(pattern);\r\n\r\n        return this;\r\n    }\r\n\r\n    walker(next: IMatchFunc) {\r\n        return this.units.reduceRight(\r\n            function (walk, pattern) { return pattern.walker(walk) },\r\n            next\r\n        );\r\n    }\r\n}\r\n\r\nclass DoubleAmpersand extends BinaryPattern {\r\n    walker(next: IMatchFunc) {\r\n        return matchUnits(next, this.units, true);\r\n    }\r\n}\r\nclass DoubleBar extends BinaryPattern {\r\n    walker(next: IMatchFunc) {\r\n        return matchUnits(next, this.units, false);\r\n    }\r\n}\r\nfunction matchUnits(next: IMatchFunc, patterns: Array<IPattern>, useMatchAll: boolean): IMatchFunc {\r\n\r\n    const matches = patterns.map(pattern => pattern.walker(null));\r\n    const indexs = matches.map((_, index) => index);\r\n\r\n    const comMatches = next && patterns.map(pattern => pattern.walker(next));\r\n\r\n    return function (env: MatchEnv, isFinal: boolean) {\r\n        let maxIndex: number;\r\n        let maxRecord: IFound;\r\n        const res = env.found;\r\n        env.found = [];\r\n\r\n        walk(indexs);\r\n        env.found = res;\r\n        if (maxRecord) {\r\n            res.push(...maxRecord);\r\n            env.index = maxIndex;\r\n            return true;\r\n        }\r\n\r\n        function walk(indexs: Array<number>) {\r\n            const state = env.store();\r\n            const length = indexs.length;\r\n            for (let i = 0; i < length; i += 1) {\r\n                const index = indexs[i];\r\n\r\n                if (!matches[index](env, false)) {\r\n                    continue;\r\n                }\r\n                if (length > 1 && walk(indexs.slice(0, i).concat(indexs.slice(i + 1)))) {\r\n                    return true;\r\n                }\r\n\r\n                if ((useMatchAll && length > 1)) {\r\n                    env.restore(state);\r\n                    continue;\r\n                }\r\n                if (comMatches || isFinal) {\r\n                    env.restore(state);\r\n                    if (!(comMatches || matches)[index](env, isFinal)) {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                if (env.compareIndex(maxIndex) < 0) {\r\n                    maxRecord = env.found.slice();\r\n                    maxIndex = env.index;\r\n                    if (env.isSuccess(true, 0)) {\r\n                        return true;\r\n                    }\r\n                }\r\n                env.restore(state);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass SingleBar extends BinaryPattern {\r\n    constructor(pattern: IPattern) {\r\n        super(pattern);\r\n    }\r\n    values: Set<string>;\r\n    add(pattern: IPattern) {\r\n        const units = this.units;\r\n\r\n        if (pattern instanceof Value) {\r\n            // 多个 互斥 值使用 Set 查找匹配降低消耗\r\n            if (!this.values) {\r\n                const prev = units[0];\r\n                if (prev instanceof Value) {\r\n                    units[0] = new Values(\r\n                        this.values = new Set([prev.data, pattern.data])\r\n                    );\r\n                    return;\r\n                }\r\n                units.unshift(pattern);\r\n            } else {\r\n                this.values.add(pattern.data);\r\n            }\r\n        } else {\r\n            units.push(pattern);\r\n        }\r\n        return this;\r\n    }\r\n    walker(next: IMatchFunc): IMatchFunc {\r\n\r\n        const matches = this.units.map(pattern => pattern.walker(next));\r\n        return function (env, isFinal) {\r\n            const index = env.index;\r\n            let maxIndex: number;\r\n            let maxRecord: IFound;\r\n            const res = env.found;\r\n            for (let i = 0; i < matches.length; i += 1) {\r\n\r\n                env.found = [];\r\n                if (matches[i](env, isFinal)) {\r\n                    if (env.compareIndex(maxIndex) < 0) {\r\n                        maxIndex = env.index;\r\n                        maxRecord = env.found;\r\n                        if (env.isSuccess(true, 0)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    env.index = index;\r\n                }\r\n            }\r\n            env.found = res;\r\n            if (maxRecord) {\r\n                res.push(...maxRecord);\r\n                env.index = maxIndex;\r\n                return true;\r\n            }\r\n        };\r\n    }\r\n\r\n}\r\nclass EqualSign extends BinaryPattern {\r\n    constructor(public pattern: Pattern, private map: Map<string, IPattern>) {\r\n        super(pattern);\r\n    }\r\n    private getIdent(pattern: IPattern) {\r\n        if (pattern instanceof Refer) {\r\n            return pattern.name;\r\n        }\r\n        debugger;\r\n    }\r\n    add(pattern: IPattern) {\r\n        const units = this.units;\r\n        const map = this.map;\r\n        for (const id of units) {\r\n            map.set(this.getIdent(id), pattern);\r\n        }\r\n        units.push(pattern);\r\n        return this;\r\n    }\r\n    walker(next: IMatchFunc) { //   让 [] 中可以存在赋值表达式  \r\n        const units = this.units;\r\n        return units[units.length - 1].walker(next);\r\n    }\r\n}\r\n\r\nconst BINARY_PATTERN_MAP = {\r\n    \"|\": SingleBar,\r\n    \"||\": DoubleBar,\r\n    \"&&\": DoubleAmpersand,\r\n    \"\": Juxtaposition,\r\n    \"=\": EqualSign\r\n}\r\nfunction parseBinaryPattern(\r\n    left: IPattern | BinaryPattern,\r\n    op: string,\r\n    right: IPattern,\r\n    map: Map<string, IPattern>\r\n) {\r\n    const Wrapper = BINARY_PATTERN_MAP[op];\r\n    if (!(left instanceof Wrapper)) {\r\n        left = new Wrapper(left, map);\r\n    }\r\n    (<BinaryPattern>left).add(right);\r\n    return left;\r\n}\r\n\r\nclass UnaryPattern extends Pattern {\r\n    constructor(public pattern: IPattern, arg2?: any) { super(); }\r\n}\r\nclass Asterisk extends UnaryPattern {\r\n    walker(next: IMatchFunc) {\r\n        return matchManyTimes(next, this.pattern, 0, Number.MAX_SAFE_INTEGER);\r\n    }\r\n}\r\nclass PlusSign extends UnaryPattern {\r\n    walker(next: IMatchFunc) {\r\n        return matchManyTimes(next, this.pattern, 1, Number.MAX_SAFE_INTEGER);\r\n    }\r\n}\r\nclass QuestionMark extends UnaryPattern {\r\n    walker(next: IMatchFunc) {\r\n        return matchManyTimes(next, this.pattern, 0, 1);\r\n    }\r\n}\r\n\r\nclass CurlyBraces extends UnaryPattern {\r\n    constructor(pattern: IPattern, public range: [number, number]) {\r\n        super(pattern);\r\n        if (pattern instanceof HashMark) {\r\n            pattern.range = range;\r\n            return pattern;\r\n        }\r\n    }\r\n    walker(next: IMatchFunc) {\r\n        return matchManyTimes(next, this.pattern, this.range[0], this.range[1]);\r\n    }\r\n}\r\nfunction matchManyTimes(\r\n    next: IMatchFunc,\r\n    pattern: IPattern,\r\n    min: number,\r\n    max: number\r\n): IMatchFunc {\r\n    const match = pattern.walker(null);\r\n\r\n    if (next) {\r\n        const comMatch = pattern.walker(next);\r\n        return function (env, isFinal) {\r\n\r\n            return walk(0);\r\n\r\n            function walk(step: number) {\r\n                const state = env.store();\r\n                if (step < max) {\r\n                    if (match(env, false)) {\r\n                        if (\r\n                            walk(step + 1)\r\n                            || (\r\n                                env.restore(state)\r\n                                , step >= min - 1\r\n                                && comMatch(env, isFinal)\r\n                            )\r\n                        ) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                if (step >= min && next(env, isFinal)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        return function (env, isFinal) {\r\n            return walk(0);\r\n\r\n            function walk(step: number) {\r\n                if (step < max) {\r\n                    const state = env.store();\r\n                    if (match(env, false)) {\r\n                        if (\r\n                            walk(step + 1)\r\n                            || (\r\n                                env.restore(state),\r\n                                isFinal\r\n                                && step >= min - 1\r\n                                && match(env, true)\r\n                            )\r\n                        ) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                if (step >= min && env.isSuccess(isFinal, 0)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nclass HashMark extends UnaryPattern {\r\n    range: [number, number] = [1, Number.MAX_SAFE_INTEGER];\r\n    walker(next: IMatchFunc) {\r\n        const [min, max] = this.range;\r\n        if (max >= 1) {\r\n\r\n            const pattern = new Juxtaposition(this.pattern)\r\n                .add(\r\n                    new CurlyBraces(\r\n                        new Juxtaposition(\r\n                            new Value(new Token(\",\", null, null))\r\n                        ).add(this.pattern),\r\n                        [min - 1, max - 1]\r\n                    )\r\n                );\r\n            return (min >= 1 ? pattern : new QuestionMark(pattern)).walker(next);\r\n        } else {\r\n            return next || POLYFILL_WALK_FUNC;\r\n        }\r\n    }\r\n}\r\nclass ExclamationPoint extends UnaryPattern {\r\n    walker(next: IMatchFunc) {\r\n        let index: number;\r\n        const match = this.pattern.walker(function (env: MatchEnv, isFinal: boolean) {\r\n            if (env.compareIndex(index) < 0) {\r\n                return next ? next(env, isFinal) : env.isSuccess(isFinal, 0);\r\n            }\r\n        });\r\n        return function (env: MatchEnv, isFinal: boolean) {\r\n            index = env.index;\r\n            return match(env, isFinal);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst UNARY_PATTERN_MAP = {\r\n    \"*\": Asterisk,\r\n    \"+\": PlusSign,\r\n    \"?\": QuestionMark,\r\n    \"{}\": function (pattern: IPattern, tokens: Array<any>) {\r\n        return new CurlyBraces(pattern, getRange(tokens));\r\n    },\r\n    \"#\": HashMark,\r\n    \"!\": ExclamationPoint,\r\n}\r\nfunction parseUnaryPattern(pattern: IPattern, op: string, content?: Array<string>): Pattern {\r\n    return new UNARY_PATTERN_MAP[op](pattern, content);\r\n}\r\n\r\nclass Refer extends Pattern {\r\n    pattern: IPattern;\r\n    name: string;\r\n    range?: [number, number];\r\n    useQuote?: boolean;\r\n    constructor(\r\n        { name, range, useQuote }: {\r\n            name: string,\r\n            range?: [number, number],\r\n            useQuote?: boolean\r\n        },\r\n        patternMap: Map<string, IPattern>\r\n    ) {\r\n        super();\r\n\r\n        let pattern = !useQuote && patternMap.get(name);\r\n        if (pattern) {\r\n            this.pattern = pattern;\r\n        } else {\r\n            Object.defineProperty(this, \"pattern\", {\r\n                get() {\r\n                    return pattern || (pattern = getCachePattern(name));\r\n                }\r\n            });\r\n        }\r\n\r\n        this.range = range;\r\n        this.useQuote = useQuote;\r\n        this.name = name;\r\n    }\r\n    walker(next: IMatchFunc): IMatchFunc {\r\n        // https://drafts.csswg.org/css-values-3/#numeric-ranges\r\n\r\n        const { pattern, range, name } = this;\r\n        //const id = this.useQuote ? `'${name}'` : name;\r\n\r\n        /**\r\n         * 不能直接在这里获得 match 方法，\r\n         * 这样会导致直接构造所有分支（可能存在循环引用的分支）\r\n         */\r\n        let match: IMatchFunc;\r\n        let right: number;\r\n\r\n        return function (env: MatchEnv, isFinal: boolean) {\r\n            /**\r\n             * 这里按需 ( 按实际输入内容深度 ) 构造下一个该出现的分支\r\n             */\r\n            if (!match) {\r\n                next || (next = POLYFILL_WALK_FUNC);\r\n                match = pattern.walker(\r\n                    function (env, isFinal) {\r\n                        /**\r\n                         * 一个 right 变量可能会被处于不同环境的同一个 match 方法嵌套使用\r\n                         * 这里使用 end 中间变量使之作用周期不冲突\r\n                         */\r\n                        const end = env.index;\r\n                        if (next(env, isFinal)) {\r\n                            right = end - 1;\r\n                            return true;\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            let length = env.found.length;\r\n            if (match(env, isFinal, range)) {\r\n                if (env.found.length > length) {\r\n                    env.found.splice(length, 0, [DATA_TYPES_MARK, name, right])\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\nclass Group extends Pattern {\r\n    pattern: IPattern;\r\n    constructor(\r\n        { content }: { content: Array<any> },\r\n        patternMap: Map<string, IPattern>\r\n    ) {\r\n        super();\r\n        this.pattern = parsePattern(content, patternMap);\r\n    }\r\n    walker(next: IMatchFunc) {\r\n        return this.pattern.walker(next);\r\n    }\r\n}\r\nclass Value extends Pattern {\r\n    data: string;\r\n    /**\r\n     * 保留位置信息用于在编译期可能出现的上下文相关处理\r\n     */\r\n    start: IPosition;\r\n    end: IPosition;\r\n    constructor({ value: data, loc: { start, end } }: Token) {\r\n        super();\r\n        this.data = data;\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    match(env: MatchEnv, isFinal: boolean) {\r\n        const { token } = env;\r\n        if (token === this.data && env.isSuccess(isFinal, 1)) {\r\n            env.found.push([token, token, env.next()]);\r\n            return true;\r\n        }\r\n    }\r\n}\r\nclass Values extends Pattern {\r\n    constructor(public data: Set<string>) { super() }\r\n    match(env: MatchEnv, isFinal: boolean) {\r\n        const { token } = env;\r\n        if (env.isSuccess(isFinal, 1) && this.data.has(token)) {\r\n            env.found.push([token, token, env.next()]);\r\n            return true;\r\n        }\r\n    }\r\n}\r\nfunction parseUnitPattern(token: any, patternMap: Map<string, IPattern>): Pattern {\r\n    switch (token.type) {\r\n        case \"DataTypes\":\r\n            return new Refer(token, patternMap);\r\n        case \"Brackets\":\r\n            return new Group(token, patternMap);\r\n        default:\r\n            return new Value(token);\r\n    }\r\n}\r\n","\r\n\r\ntype IMatchFunc = (env: MatchEnv, isFinal: boolean, arg?: any) => boolean | void;\r\n/**\r\n * 0 为 DATA_TYPES_MARK 标记或者任意匹配字符串解析数据\r\n * 1 为 data types 的 key 值，或者匹配目标字符串\r\n * 2 为匹配目标的结束下标\r\n */\r\ntype IFound = Array<[any, string, number]>;\r\n\r\ntype IWalker = (next: IMatchFunc) => IMatchFunc;\r\n\r\ninterface IPattern {\r\n    match?: IMatchFunc,\r\n    walker: IWalker\r\n}\r\n\r\nexport {\r\n    getRange,\r\n    walker,\r\n    MatchEnv,\r\n    IPattern,\r\n    IFound,\r\n    IMatchFunc,\r\n    IWalker\r\n}\r\n\r\n\r\nfunction walker(match: IMatchFunc) {\r\n    return function (next: IMatchFunc): IMatchFunc {\r\n        if (next) {\r\n            return function (env, isFinal, arg) {\r\n                const state = env.store();\r\n                if (match(env, false, arg)) {\r\n                    if (next(env, isFinal)) {\r\n                        return true;\r\n                    }\r\n                    env.restore(state);\r\n                }\r\n            };\r\n        }\r\n        return match;\r\n    }\r\n}\r\n\r\nclass MatchEnv {\r\n    index: number;\r\n    token: any;\r\n    found: IFound = [];\r\n    success = false;\r\n    constructor(public tokens: Array<any>, public pattern?: IPattern) {\r\n        let index = 0;\r\n\r\n        this.token = tokens[index];\r\n        Object.defineProperties(this, {\r\n            index: {\r\n                get() { return index; },\r\n                set(val: number) {\r\n                    index = val;\r\n                    this.token = this.tokens[index];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    store(): [number, number] {\r\n        return [this.index, this.found.length];\r\n    }\r\n    restore([index, length]: [number, number]) {\r\n        this.index = index;\r\n        this.found.length = length;\r\n    }\r\n    next() {\r\n        const { index, tokens } = this;\r\n        if (tokens.length > index) {\r\n            this.index = index + 1;\r\n        }\r\n        return index;\r\n    }\r\n    prev() {\r\n        const index = this.index;\r\n        if (index > 0) {  // 会使 token = undefined\r\n            this.index = index - 1;\r\n        }\r\n        return index;\r\n    }\r\n    compareIndex(index: number = -1) {\r\n        return index - this.index;\r\n    }\r\n    isSuccess(isFinal: boolean, offset: number) {\r\n        return !isFinal || this.index >= this.tokens.length - offset;\r\n    }\r\n}\r\n\r\n\r\nfunction isPositiveInteger(value: number) {\r\n    return typeof value === \"number\" && value >= 0 && !(value % 1);\r\n}\r\n\r\nfunction getRange(tokens: Array<any>) {\r\n    let index = 0;\r\n    let value = tokens[index];\r\n    const range: [number, number] = [value, value];\r\n\r\n    do {\r\n        value = tokens[index];\r\n        if (!isPositiveInteger(value)) {\r\n            debugger;\r\n        }\r\n        range[index >> 1] = value;\r\n\r\n        index += 2;\r\n        if (index - 1 < tokens.length) {\r\n            if (tokens[index - 1].value !== \",\") {\r\n                debugger;\r\n            } else {\r\n                range[index >> 1] = Number.MAX_SAFE_INTEGER;\r\n            }\r\n        }\r\n    } while (index < tokens.length)\r\n\r\n    return range;\r\n}\r\n","import {\r\n    Scanner, OPERATIONS, HOOK_MODE, IScanEnv,\r\n    IPattern, Token,\r\n    IPosition, ISourceLocation,\r\n} from \"astry\"\r\n\r\n\r\nconst {\r\n    FINISH,\r\n    WRAP, UNWRAP, UNWRAP_ALL,\r\n    OPTION,\r\n    SPLIT,\r\n    NO_COLLECT, NO_CAPTURE,\r\n    MARK_AS_ROOT, FORK_IN_PARENT, FORK_IN_ROOT,\r\n    END, END_ON_LEFT,\r\n    useKey,\r\n    node, key, pick, hook, pipe, prev, merge,\r\n\r\n    MATCH_BEGIN,\r\n    MATCH_END,\r\n    MATCH_EOF,\r\n    MERGE_ALL_TOKENS,\r\n    UNFOLD\r\n} = OPERATIONS;\r\n\r\nconst MATCH_WHITE_SPACE_CHARACHER: IPattern = [` `, `\\t`];  // 换行在这里作为断句符单独处理\r\nconst CLEAR_WHITE_SPACE_CHARACHER: IPattern = [\r\n    [NO_COLLECT, MATCH_WHITE_SPACE_CHARACHER]\r\n];\r\n\r\nconst THROW_TOKEN_ERROR = hook(function (env, start, end) {\r\n    console.log(\"Invalid or unexpected token\", start, end);\r\n}, HOOK_MODE.RESOLVE);\r\n\r\n\r\nconst MATCH_QUOTES = [\r\n    [\"'\", WRAP, \"'\", UNWRAP]\r\n];\r\n\r\nconst MATCH_RANGE_DEFINITION_NOTATION = [\r\n    [\r\n        NO_COLLECT, \"[\", WRAP,\r\n        [\r\n            [pipe(parseNumber), NO_COLLECT, \",\"],\r\n            [pipe(parseNumber), NO_COLLECT, \"]\", UNWRAP]\r\n        ],\r\n\r\n    ]\r\n];\r\nconst MATCH_DATA_TYPES = [\r\n    [\r\n        node(\"DataTypes\"),\r\n        NO_COLLECT, \"<\", WRAP,\r\n        pipe(function (token: Token) {\r\n            return useKey(\"name\", token.value);\r\n        }),\r\n        [\r\n            [\">\", pipe(function () { return useKey(\"value\", \"<>\"); }), UNWRAP],\r\n            [CLEAR_WHITE_SPACE_CHARACHER],\r\n            [\r\n                pick(function (range: Array<number>) {\r\n                    return useKey(\"range\", range)\r\n                }),\r\n                MATCH_RANGE_DEFINITION_NOTATION\r\n            ],\r\n            [pick(function (tokens: Array<Token>) {\r\n                const token = tokens.slice(1, -1)[0];\r\n                if (token) {\r\n                    return [\r\n                        useKey(\"name\", token.value),\r\n                        useKey(\"useQuote\", true),\r\n                    ]\r\n                }\r\n            }), MATCH_QUOTES]\r\n        ]\r\n\r\n    ]\r\n];\r\nconst MATCH_BRACKETS = [\r\n    [\r\n        node(\r\n            \"Brackets\",\r\n            function ([tokens]: [Array<Token[]>]) {\r\n                return [useKey(\"content\", tokens), useKey(\"value\", \"[]\")];\r\n            }\r\n        ),\r\n        NO_COLLECT, \"[\", WRAP,\r\n        FORK_IN_ROOT,\r\n        NO_COLLECT, \"]\", UNWRAP\r\n    ]\r\n];\r\nconst MATCH_CURLY_BRACES = [\r\n    [\r\n        node(\r\n            \"CurlyBraces\",\r\n            function ([tokens]: [Array<Token[]>]) {\r\n                return [useKey(\"content\", tokens), useKey(\"value\", \"{}\")];\r\n            }\r\n        ),\r\n        NO_COLLECT, \"{\", WRAP,\r\n        [\r\n            [CLEAR_WHITE_SPACE_CHARACHER],\r\n            [pipe(parseNumber), \",\"],\r\n            [pipe(parseNumber), NO_COLLECT, \"}\", UNWRAP]\r\n        ]\r\n    ]\r\n];\r\n\r\nconst MATCH_STATEMENT_END = [\r\n    \"\\n\",\r\n    [MATCH_EOF]\r\n];\r\n\r\nexport default new Scanner([\r\n    [CLEAR_WHITE_SPACE_CHARACHER],\r\n    [\r\n        pick(function (tokens: Array<Token>) {\r\n            if (tokens.length) {\r\n                return tokens;\r\n            }\r\n        }),\r\n        MATCH_BEGIN, WRAP,\r\n        MARK_AS_ROOT,\r\n        [\r\n            [NO_COLLECT, MATCH_STATEMENT_END, UNWRAP],\r\n            [CLEAR_WHITE_SPACE_CHARACHER],\r\n            [MATCH_QUOTES],\r\n            [MATCH_DATA_TYPES],\r\n            [MATCH_BRACKETS],\r\n            [MATCH_CURLY_BRACES],\r\n            \",\",\r\n            \"&&\",\r\n            \"||\",\r\n            \"|\",\r\n            \"*\",\r\n            \"+\",\r\n            \"?\",\r\n            \"!\",\r\n            \"=\",\r\n        ]\r\n    ],\r\n\r\n]);\r\n\r\n\r\nfunction parseNumber({ value }: Token) {\r\n    if (value === \"∞\" || value === \"+∞\") {\r\n        return Number.POSITIVE_INFINITY;\r\n    }\r\n    if (value === \"−∞\") {\r\n        return Number.NEGATIVE_INFINITY;\r\n    }\r\n    return Number(value);\r\n}\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","\r\nimport parser from './parser'\r\n\r\nconst TEST_TABLE: Record<string, [string, ...Array<string>]> = {\r\n    \"animation\": [\r\n        `<single-animation>#\r\nwhere \r\n<single-animation> = <time> || <easing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [ none | <keyframes-name> ]\r\n\r\nwhere \r\n<easing-function> = linear | <cubic-bezier-timing-function> | <step-timing-function>\r\n<single-animation-iteration-count> = infinite | <number>\r\n<single-animation-direction> = normal | reverse | alternate | alternate-reverse\r\n<single-animation-fill-mode> = none | forwards | backwards | both\r\n<single-animation-play-state> = running | paused\r\n<keyframes-name> = <custom-ident> | <string>\r\n\r\nwhere \r\n<cubic-bezier-timing-function> = ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)\r\n<step-timing-function> = step-start | step-end | steps(<integer>[, <step-position>]?)\r\n\r\nwhere \r\n<step-position> = jump-start | jump-end | jump-none | jump-both | start | end`,\r\n        ` .5s cubic-bezier(0.1, 0.7, 1.0, 0.1) 1s infinite alternate slidein`\r\n    ],\r\n    \"animation-timing-function\": [\r\n        `<easing-function>#\r\nwhere \r\n<easing-function> = linear | <cubic-bezier-timing-function> | <step-timing-function>\r\n\r\nwhere \r\n<cubic-bezier-timing-function> = ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)\r\n<step-timing-function> = step-start | step-end | steps(<integer>[, <step-position>]?)\r\n\r\nwhere \r\n<step-position> = jump-start | jump-end | jump-none | jump-both | start | end`,\r\n        `ease, step-start, cubic-bezier(0.1, 0.7, 1.0, 0.1)`\r\n    ],\r\n    \"background\": [\r\n        `[ <bg-layer> , ]* <final-bg-layer>\r\nwhere \r\n<bg-layer> = <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>\r\n<final-bg-layer> = <'background-color'> || <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>\r\n\r\nwhere \r\n<bg-image> = none | <image>\r\n<bg-position> = [ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ] ]\r\n<bg-size> = [ <length-percentage> | auto ]{1,2} | cover | contain\r\n<repeat-style> = repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}\r\n<attachment> = scroll | fixed | local\r\n<box> = border-box | padding-box | content-box\r\n\r\nwhere \r\n<image> = <url> | <image()> | <image-set()> | <element()> | <paint()> | <cross-fade()> | <gradient>\r\n<length-percentage> = <length> | <percentage>\r\n\r\nwhere \r\n<image()> = image( <image-tags>? [ <image-src>? , <color>? ]! )\r\n<image-set()> = image-set( <image-set-option># )\r\n<element()> = element( <id-selector> )\r\n<paint()> = paint( <ident> (en-US), <declaration-value>? )\r\n<cross-fade()> = cross-fade( <cf-mixing-image> , <cf-final-image>? )\r\n<gradient> = <linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()>\r\n\r\nwhere \r\n<image-tags> = ltr | rtl\r\n<image-src> = <url> | <string>\r\n<color> = <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>\r\n<image-set-option> = [ <image> | <string> ] [ <resolution> || type(<string>) ]\r\n<id-selector> = <hash-token>\r\n<cf-mixing-image> = <percentage>? && <image>\r\n<cf-final-image> = <image> | <color>\r\n<linear-gradient()> = linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )\r\n<repeating-linear-gradient()> = repeating-linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )\r\n<radial-gradient()> = radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )\r\n<repeating-radial-gradient()> = repeating-radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )\r\n<conic-gradient()> = conic-gradient( [ from <angle> ]? [ at <position> ]?, <angular-color-stop-list> )\r\n\r\nwhere \r\n<rgb()> = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )\r\n<rgba()> = rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )\r\n<hsl()> = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hsla()> = hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hwb()> = hwb( [<hue> | none] [<percentage> | none] [<percentage> | none] [ / [<alpha-value> | none] ]? )\r\n<side-or-corner> = [ left | right ] || [ top | bottom ]\r\n<color-stop-list> = [ <linear-color-stop> [, <linear-color-hint>]? ]# , <linear-color-stop>\r\n<ending-shape> = circle | ellipse\r\n<size> = closest-side | farthest-side | closest-corner | farthest-corner | <length> | <length-percentage>{2}\r\n<position> = [ [ left | center | right ] || [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]? | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]\r\n<angular-color-stop-list> = [ <angular-color-stop> [, <angular-color-hint>]? ]# , <angular-color-stop>\r\n\r\nwhere \r\n<alpha-value> = <number> | <percentage>\r\n<hue> = <number> | <angle>\r\n<linear-color-stop> = <color> <color-stop-length>?\r\n<linear-color-hint> = <length-percentage>\r\n<angular-color-stop> = <color> && <color-stop-angle>?\r\n<angular-color-hint> = <angle-percentage>\r\n\r\nwhere \r\n<color-stop-length> = <length-percentage>{1,2}\r\n<color-stop-angle> = <angle-percentage>{1,2}\r\n<angle-percentage> = <angle> | <percentage>\r\n`,\r\n        `center right / contain no-repeat url(\"../../media/examples/firefox-logo.svg\"),\r\n#eee 35% url(\"../../media/examples/lizard.png\")`,\r\n        `center right / contain no-repeat url(\"../../media/examples/firefox-logo.svg\"),\r\n        center no-repeat url(\"../../media/examples/firefox-logo.svg\"),\r\nrgba(20% 30% 40% /0.5)   35% none`,\r\n        `left 5% / 15% 60% repeat-x url(\"../../media/examples/star.png\")`\r\n    ],\r\n    \"border\": [\r\n        `<line-width> || <line-style> || <color>\r\nwhere \r\n<line-width> = <length> | thin | medium | thick\r\n<line-style> = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset\r\n<color> = <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>\r\n\r\nwhere \r\n<rgb()> = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )\r\n<rgba()> = rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )\r\n<hsl()> = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hsla()> = hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hwb()> = hwb( [<hue> | none] [<percentage> | none] [<percentage> | none] [ / [<alpha-value> | none] ]? )\r\n\r\nwhere \r\n<alpha-value> = <number> | <percentage>\r\n<hue> = <number> | <angle>`,\r\n        `4mm ridge rgba(211, 220, 50, .6)`\r\n    ],\r\n    \"border-radius\": [\r\n        `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?\r\nwhere \r\n<length-percentage> = <length> | <percentage>`,\r\n        `50% 20% / 10% 40%`,\r\n        `10px 100px / 120px`\r\n    ],\r\n    \"box-shadow\": [\r\n        `none | <shadow>#\r\n        where \r\n        <shadow> = inset? && <length>{2,4} && <color>?\r\n        \r\n        where \r\n        <color> = <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>\r\n        \r\n        where \r\n        <rgb()> = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )\r\n        <rgba()> = rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )\r\n        <hsl()> = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n        <hsla()> = hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n        <hwb()> = hwb( [<hue> | none] [<percentage> | none] [<percentage> | none] [ / [<alpha-value> | none] ]? )\r\n        \r\n        where \r\n        <alpha-value> = <number> | <percentage>\r\n        <hue> = <number> | <angle>`,\r\n        `3px 3px red, -1em 0 .4em olive`,\r\n        `12px 12px 2px 1px rgba(0, 0, 255, .2)`\r\n    ],\r\n    \"content\": [\r\n        `normal | none | [ <content-replacement> | <content-list> ] [/ [ <string> | <counter> ]+ ]?\r\nwhere \r\n<content-replacement> = <image>\r\n<content-list> = [ <string> | contents | <image> | <counter> | <quote> | <target> | <leader()> | <attr()> ]+\r\n<counter> = <counter()> | <counters()>\r\n\r\nwhere \r\n<image> = <url> | <image()> | <image-set()> | <element()> | <paint()> | <cross-fade()> | <gradient>\r\n<quote> = open-quote | close-quote | no-open-quote | no-close-quote\r\n<target> = <target-counter()> | <target-counters()> | <target-text()>\r\n<leader()> = leader( <leader-type> )\r\n<counter()> = counter( <counter-name>, <counter-style>? )\r\n<counters()> = counters( <counter-name>, <string>, <counter-style>? )\r\n\r\nwhere \r\n<image()> = image( <image-tags>? [ <image-src>? , <color>? ]! )\r\n<image-set()> = image-set( <image-set-option># )\r\n<element()> = element( <id-selector> )\r\n<paint()> = paint( <ident> (en-US), <declaration-value>? )\r\n<cross-fade()> = cross-fade( <cf-mixing-image> , <cf-final-image>? )\r\n<gradient> = <linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()>\r\n<target-counter()> = target-counter( [ <string> | <url> ] , <custom-ident> , <counter-style>? )\r\n<target-counters()> = target-counters( [ <string> | <url> ] , <custom-ident> , <string> , <counter-style>? )\r\n<target-text()> = target-text( [ <string> | <url> ] , [ content | before | after | first-letter ]? )\r\n<leader-type> = dotted | solid | space | <string>\r\n<counter-name> = <custom-ident>\r\n<counter-style> = <counter-style-name> | symbols()\r\n\r\nwhere \r\n<image-tags> = ltr | rtl\r\n<image-src> = <url> | <string>\r\n<color> = <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>\r\n<image-set-option> = [ <image> | <string> ] [ <resolution> || type(<string>) ]\r\n<id-selector> = <hash-token>\r\n<cf-mixing-image> = <percentage>? && <image>\r\n<cf-final-image> = <image> | <color>\r\n<linear-gradient()> = linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )\r\n<repeating-linear-gradient()> = repeating-linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )\r\n<radial-gradient()> = radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )\r\n<repeating-radial-gradient()> = repeating-radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )\r\n<conic-gradient()> = conic-gradient( [ from <angle> ]? [ at <position> ]?, <angular-color-stop-list> )\r\n<counter-style-name> = <custom-ident>\r\n\r\nwhere \r\n<rgb()> = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )\r\n<rgba()> = rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )\r\n<hsl()> = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hsla()> = hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hwb()> = hwb( [<hue> | none] [<percentage> | none] [<percentage> | none] [ / [<alpha-value> | none] ]? )\r\n<side-or-corner> = [ left | right ] || [ top | bottom ]\r\n<color-stop-list> = [ <linear-color-stop> [, <linear-color-hint>]? ]# , <linear-color-stop>\r\n<ending-shape> = circle | ellipse\r\n<size> = closest-side | farthest-side | closest-corner | farthest-corner | <length> | <length-percentage>{2}\r\n<position> = [ [ left | center | right ] || [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]? | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]\r\n<angular-color-stop-list> = [ <angular-color-stop> [, <angular-color-hint>]? ]# , <angular-color-stop>\r\n\r\nwhere \r\n<alpha-value> = <number> | <percentage>\r\n<hue> = <number> | <angle>\r\n<linear-color-stop> = <color> <color-stop-length>?\r\n<linear-color-hint> = <length-percentage>\r\n<length-percentage> = <length> | <percentage>\r\n<angular-color-stop> = <color> && <color-stop-angle>?\r\n<angular-color-hint> = <angle-percentage>\r\n\r\nwhere \r\n<color-stop-length> = <length-percentage>{1,2}\r\n<color-stop-angle> = <angle-percentage>{1,2}\r\n<angle-percentage> = <angle> | <percentage>`,\r\n        `url(http://www.mozilla.org/favicon.ico) \" MOZILLA: \"`,\r\n        `counters(section_counter, \".\", decimal-leading-zero)`,\r\n        `\" (\" attr(id) \")\"`,\r\n        `image-set(\"image1x.png\" 1x, \"image2x.png\" 2x)`\r\n    ],\r\n    \"filter\": [\r\n        `none | <filter-function-list>\r\nwhere \r\n<filter-function-list> = [ <filter-function> | <url> ]+\r\n\r\nwhere \r\n<filter-function> = <blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <saturate()> | <sepia()>\r\n\r\nwhere \r\n<blur()> = blur( <length> )\r\n<brightness()> = brightness( <number-percentage> )\r\n<contrast()> = contrast( [ <number-percentage> ] )\r\n<drop-shadow()> = drop-shadow( <length>{2,3} <color>? )\r\n<grayscale()> = grayscale( <number-percentage> )\r\n<hue-rotate()> = hue-rotate( <angle> )\r\n<invert()> = invert( <number-percentage> )\r\n<opacity()> = opacity( [ <number-percentage> ] )\r\n<saturate()> = saturate( <number-percentage> )\r\n<sepia()> = sepia( <number-percentage> )\r\n\r\nwhere \r\n<number-percentage> = <number> | <percentage>\r\n<color> = <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>\r\n\r\nwhere \r\n<rgb()> = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )\r\n<rgba()> = rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )\r\n<hsl()> = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hsla()> = hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )\r\n<hwb()> = hwb( [<hue> | none] [<percentage> | none] [<percentage> | none] [ / [<alpha-value> | none] ]? )\r\n\r\nwhere \r\n<alpha-value> = <number> | <percentage>\r\n<hue> = <number> | <angle>`,\r\n        `drop-shadow(16px 16px 20px red) invert(75%)`,\r\n        `contrast(175%) brightness(3%)`,\r\n        `url('../../me\\\\\\\\dia/exam\\\\\\nples/sh\\\\'adow.svg#element-id')`\r\n    ],\r\n    \"flex\": [\r\n        `none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]`,\r\n        `1 1 100px`,\r\n        `2 2 10%`\r\n    ],\r\n    \"font\": [\r\n        `[ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar\r\nwhere \r\n<font-variant-css21> = [ normal | small-caps ]`,\r\n        `italic 1.2em \"Fira Sans\", serif`,\r\n        `small-caps bold 24px/1 sans-serif`\r\n    ],\r\n    \"grid\": [\r\n        `<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>`,\r\n        `auto-flow / 1fr 1fr 1fr`,\r\n        `repeat(3, 80px) / auto-flow`\r\n    ],\r\n    \"margin\": [\r\n        `[ <length> | <percentage> | auto ]{1,4}`,\r\n        `10px 50px 20px 0`,\r\n        `10px 50px 20px`,\r\n        `5% 0`\r\n    ],\r\n    \"transform\": [\r\n        `none | <transform-list>\r\nwhere \r\n<transform-list> = <transform-function>+\r\n\r\nwhere \r\n<transform-function> = <matrix()> | <translate()> | <translateX()> | <translateY()> | <scale()> | <scaleX()> | <scaleY()> | <rotate()> | <skew()> | <skewX()> | <skewY()> | <matrix3d()> | <translate3d()> | <translateZ()> | <scale3d()> | <scaleZ()> | <rotate3d()> | <rotateX()> | <rotateY()> | <rotateZ()> | <perspective()>\r\n\r\nwhere \r\n<matrix()> = matrix( <number>#{6} )\r\n<translate()> = translate( <length-percentage> , <length-percentage>? )\r\n<translateX()> = translateX( <length-percentage> )\r\n<translateY()> = translateY( <length-percentage> )\r\n<scale()> = scale( <number> , <number>? )\r\n<scaleX()> = scaleX( <number> )\r\n<scaleY()> = scaleY( <number> )\r\n<rotate()> = rotate( [ <angle> | <zero> ] )\r\n<skew()> = skew( [ <angle> | <zero> ] , [ <angle> | <zero> ]? )\r\n<skewX()> = skewX( [ <angle> | <zero> ] )\r\n<skewY()> = skewY( [ <angle> | <zero> ] )\r\n<matrix3d()> = matrix3d( <number>#{16} )\r\n<translate3d()> = translate3d( <length-percentage> , <length-percentage> , <length> )\r\n<translateZ()> = translateZ( <length> )\r\n<scale3d()> = scale3d( <number> , <number> , <number> )\r\n<scaleZ()> = scaleZ( <number> )\r\n<rotate3d()> = rotate3d( <number> , <number> , <number> , [ <angle> | <zero> ] )\r\n<rotateX()> = rotateX( [ <angle> | <zero> ] )\r\n<rotateY()> = rotateY( [ <angle> | <zero> ] )\r\n<rotateZ()> = rotateZ( [ <angle> | <zero> ] )\r\n<perspective()> = perspective( <length> )\r\n\r\nwhere \r\n<length-percentage> = <length> | <percentage>`,\r\n        `matrix(1, 2, 3, 4, 5, 6)`,\r\n        `scale(0.5) translate(-100%, -100%)`,\r\n        `matrix3d(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0)`,\r\n        `rotate3d(1, 2.0, 3.0, 10deg)`,\r\n        `rotate(0) rotate(20deg)`\r\n    ],\r\n    \"transition\": [\r\n        `<single-transition>#\r\nwhere \r\n<single-transition> = [ none | <single-transition-property> ] || <time> || <easing-function> || <time>\r\n\r\nwhere \r\n<single-transition-property> = all | <custom-ident>\r\n<easing-function> = linear | <cubic-bezier-timing-function> | <step-timing-function>\r\n\r\nwhere \r\n<cubic-bezier-timing-function> = ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)\r\n<step-timing-function> = step-start | step-end | steps(<integer>[, <step-position>]?)\r\n\r\nwhere \r\n<step-position> = jump-start | jump-end | jump-none | jump-both | start | end`,\r\n        `margin-right 2s`,\r\n        `margin-right 2s ease-in-out`,\r\n        `all 1s ease-out`,\r\n        `margin-right 4s ease-in-out 1s`,\r\n        `inherit`\r\n    ]\r\n\r\n};\r\nglobal.test_vds = TEST_TABLE.background[0];\r\nglobal.test_csv = TEST_TABLE.background[1];\r\nglobal.vdsParser = parser;\r\n\r\ntest();\r\nfunction test() {\r\n\r\n    console.time(\"test\");\r\n    /**\r\n     * data-types 内的的一些公用 pattern 为分析过程中用到则按需编译，\r\n     * 这里包含了 TEST_TABLE 中用到的所有公共 pattern 的编译时，\r\n     * 和结合编译生成的 analyzer 的分析时 \r\n     */\r\n    const RESULT_TABLE = {};\r\n    for (const key in TEST_TABLE) {\r\n        const testCase = TEST_TABLE[key];\r\n        const [syntax] = testCase;\r\n        const input = testCase.slice(1);\r\n        const analyzer = parser(syntax);\r\n        const output = input.map(analyzer);\r\n        const success = output.map(item => item.success).join()\r\n        RESULT_TABLE[key] = {\r\n            syntax,\r\n            input,\r\n            analyzer,\r\n            output,\r\n            success\r\n        }\r\n    }\r\n    console.timeEnd(\"test\");\r\n\r\n    console.table(RESULT_TABLE);\r\n}\r\n\r\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","__webpack_exports__","OPERATIONS","MARKS","SCOPE","defineProperty","value","unwrapTokens","UseKey","Token","Scanner","Hook","constructor","this","mode","Node","type","useContent","super","Wrapper","NODE_MAP","eval","use","t","n","tokens","hookPoint","s","i","loc","start","end","r","key","content","push","splice","Array","forEach","Key","Merge","Prev","match","onlyToken","length","slice","Pipe","pipe","Pick","arguments","Call","NoCapture","offset","line","column","FINISH","String","WRAP","UNWRAP","UNWRAP_ALL","OPTION","SPLIT","NO_COLLECT","NO_CAPTURE","MARK_AS_ROOT","FORK_IN_PARENT","FORK_IN_ROOT","END","END_ON_LEFT","useKey","toString","node","pick","hook","prev","merge","MATCH_BEGIN","MATCH_END","MATCH_EOF","MERGE_ALL_TOKENS","reduce","concat","UNFOLD","ROOT","RESOLVE","TYPE","ROLL","PARENT","COLLECT","BUBBING_HOOKS","CAPTURING_HOOKS","SLICE_HOOKS","IGNORE_TESTS","RESOLVE_TYPE_SET","Set","NODE","START","CURSOR","BACK_POINT","USE_FOLD","useEscape","useFold","ignoreCase","scanTree","build","assign","scan","input","begin","O","c","u","l","R","toLowerCase","S","shift","f","pop","filter","has","unshift","E","trim","RootStack","buildRule","buildKey","window","test","reverse","__webpack_export_target__","__esModule","CLEAR_COMMENT","CLEAR_WHITE_SPACE_CHARACHER","THROW_TOKEN_ERROR","env","console","log","MATCH_STRING","MATCH_URL","syntaxesContext","SHARING_SYNTAXES","SHARING_DATA_TYPES_ANALYZER_MAP","path","default","COLOR_VALUE_MAP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","LENGTH_UNITS","PERCENTAGE_UNITS","ANGLE_UNITS","TIME_UNITS","FLEX_UNITS","FREQUENCY_UNITS","RESOLUTION_UNITS","DIMENSION_UNITS","unit","DATA_TYPES_PATTERN_MAP","wrapPattern","valuesPattern","pickStringPattern","name","range","num","Number","checkRange","lazyInitPattern","pickArrayPattern","hack","token","replace","color","parseInt","opacity","syntax","setSharingSyntax","pattern","analyzer","getPattern","buildPattern","next","walker","buildAnalyzer","units","optionalUnit","unitSet","res","text","found","isNaN","parseFloat","getValue","undefined","VDS_SYNTAXES","isFinal","arg","isSuccess","join","list","item","getSharingAnalyzer","getCachePattern","MatchEnv","DATA_TYPES_MARK","Symbol","UNARY_OPERATOR_SET","BINARY_OPERATOR_LIST","SPECIFIC_CASE_SET","POLYFILL_WALK_FUNC","success","Map","parseStatement","get","statement","parsePattern","EqualSign","SingleBar","ExclamationPoint","add","set","getQuotesLiteral","hackEnd","patternMap","index","adhesive","isAdjacent","Value","data","indexOf","isUnaryOperator","isBinaryOperator","op","parseUnaryPattern","parseUnitPattern","maxp","maxi","precedence","parseBinaryPattern","includes","Pattern","bind","BinaryPattern","Separate","left","separator","right","Juxtaposition","QuestionMark","reduceRight","walk","matchUnits","patterns","useMatchAll","matches","indexs","_","comMatches","maxIndex","maxRecord","state","store","restore","compareIndex","values","Values","getIdent","Refer","BINARY_PATTERN_MAP","UnaryPattern","arg2","matchManyTimes","CurlyBraces","HashMark","min","max","comMatch","step","MAX_SAFE_INTEGER","UNARY_PATTERN_MAP","getRange","useQuote","Group","isPositiveInteger","defineProperties","val","MATCH_QUOTES","MATCH_RANGE_DEFINITION_NOTATION","parseNumber","MATCH_DATA_TYPES","MATCH_BRACKETS","MATCH_CURLY_BRACES","MATCH_STATEMENT_END","POSITIVE_INFINITY","NEGATIVE_INFINITY","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","TEST_TABLE","test_vds","background","test_csv","vdsParser","time","RESULT_TABLE","testCase","output","timeEnd","table"],"sourceRoot":""}